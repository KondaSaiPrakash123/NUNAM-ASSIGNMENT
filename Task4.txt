Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  6 2021, 13:40:21) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> 
================= RESTART: C:\Users\user\Desktop\NUNAM\Task4.py ================
         12482 function calls (11984 primitive calls) in 2.321 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       10    0.000    0.000    0.019    0.002 <__array_function__ internals>:2(concatenate)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
        2    0.000    0.000    0.002    0.001 <__array_function__ internals>:2(empty_like)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(min_scalar_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
        1    0.000    0.000    0.002    0.002 <__array_function__ internals>:2(repeat)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.006    0.003 <__array_function__ internals>:2(sort)
        2    0.000    0.000    0.002    0.001 <__array_function__ internals>:2(zeros_like)
        1    0.000    0.000    0.017    0.017 <frozen importlib._bootstrap>:1002(_find_and_load)
       32    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1033(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:112(release)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:152(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:156(__enter__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:160(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:166(_get_module_lock)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:185(cb)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap>:220(_call_with_frames_removed)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:231(_verbose_message)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:351(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:385(cached)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:398(parent)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:406(has_location)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:486(_init_module_attrs)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:558(module_from_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        1    0.000    0.000    0.016    0.016 <frozen importlib._bootstrap>:659(_load_unlocked)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:736(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:811(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:87(acquire)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:874(__enter__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:878(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:901(_find_spec)
        1    0.000    0.000    0.017    0.017 <frozen importlib._bootstrap>:967(_find_and_load_unlocked)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1017(path_stats)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1272(_path_importer_cache)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1309(_get_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1341(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1433(_get_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1438(find_spec)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:301(cache_from_source)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:36(_relax_case)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:431(_get_cached)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:463(_check_name_wrapper)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:500(_classify_pyc)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:51(_unpack_uint32)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:533(_validate_timestamp_pyc)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:585(_compile_bytecode)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_join)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:636(spec_from_file_location)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(<listcomp>)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:68(_path_split)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:781(create_module)
        1    0.000    0.000    0.016    0.016 <frozen importlib._bootstrap_external>:784(exec_module)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:80(_path_stat)
        1    0.000    0.000    0.015    0.015 <frozen importlib._bootstrap_external>:856(get_code)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:90(_path_is_mode_type)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:946(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:971(get_filename)
        1    0.000    0.000    0.014    0.014 <frozen importlib._bootstrap_external>:976(get_data)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:99(_path_isfile)
        1    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000    2.321    2.321 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:2(__init__)
        1    0.011    0.011    2.321    2.321 Task4.py:8(dsv)
       10    0.000    0.000    0.000    0.000 _asarray.py:110(asanyarray)
       49    0.000    0.000    0.000    0.000 _asarray.py:23(asarray)
        7    0.000    0.000    0.000    0.000 _asarray.py:293(require)
        7    0.000    0.000    0.000    0.000 _asarray.py:382(<setcomp>)
        9    0.000    0.000    0.000    0.000 _collections_abc.py:262(__subclasshook__)
       18    0.000    0.000    0.000    0.000 _collections_abc.py:283(__subclasshook__)
       21    0.000    0.000    0.000    0.000 _collections_abc.py:315(__subclasshook__)
        3    0.000    0.000    0.000    0.000 _collections_abc.py:362(__subclasshook__)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:381(__subclasshook__)
      126    0.000    0.000    0.000    0.000 _collections_abc.py:409(__subclasshook__)
       23    0.000    0.000    0.000    0.000 _collections_abc.py:78(_check_methods)
        4    0.000    0.000    0.000    0.000 _decorators.py:336(doc)
        4    0.000    0.000    0.000    0.000 _decorators.py:356(decorator)
        4    0.000    0.000    0.000    0.000 _decorators.py:376(<listcomp>)
        1    0.000    0.000    0.000    0.000 _decorators.py:426(__init__)
        1    0.000    0.000    0.000    0.000 _decorators.py:432(__call__)
        1    0.000    0.000    0.000    0.000 _decorators.py:466(__init__)
        1    0.000    0.000    0.000    0.000 _decorators.py:473(__call__)
       34    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       34    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       34    0.000    0.000    0.000    0.000 _dtype.py:321(_name_get)
       13    0.000    0.000    0.006    0.000 _methods.py:53(_any)
        6    0.000    0.000    0.000    0.000 _methods.py:59(_all)
       36    0.000    0.000    0.000    0.000 _mixins.py:103(shape)
       32    0.000    0.000    0.000    0.000 _mixins.py:107(__len__)
        4    0.000    0.000    0.000    0.000 _mixins.py:110(ndim)
        2    0.000    0.000    0.000    0.000 _mixins.py:217(__getitem__)
        4    0.000    0.000    0.068    0.017 _mixins.py:60(take)
        1    0.000    0.000    0.000    0.000 _ranges.py:13(generate_regular_range)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        3    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
   208/18    0.000    0.000    0.002    0.000 abc.py:100(__subclasscheck__)
       50    0.000    0.000    0.002    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 aggregation.py:249(maybe_mangle_lambdas)
        1    0.000    0.000    0.000    0.000 aggregation.py:46(reconstruct_func)
        1    0.000    0.000    0.055    0.055 aggregation.py:549(aggregate)
        7    0.000    0.000    0.000    0.000 algorithms.py:1534(_get_take_nd_function)
     10/6    0.000    0.000    0.068    0.011 algorithms.py:1570(take)
        7    0.001    0.000    0.040    0.006 algorithms.py:1661(take_nd)
       11    0.000    0.000    0.000    0.000 base.py:1232(name)
        3    0.000    0.000    0.002    0.001 base.py:1688(is_monotonic)
        5    0.004    0.001    0.004    0.001 base.py:1696(is_monotonic_increasing)
        2    0.092    0.046    0.092    0.046 base.py:1764(is_unique)
        1    0.000    0.000    0.000    0.000 base.py:1803(is_boolean)
       24    0.000    0.000    0.000    0.000 base.py:199(construct_from_string)
        2    0.000    0.000    0.000    0.000 base.py:2127(inferred_type)
        3    0.000    0.000    0.000    0.000 base.py:2134(_is_all_dates)
        1    0.000    0.000    0.000    0.000 base.py:226(_obj_with_exclusions)
     12/6    0.000    0.000    0.023    0.004 base.py:250(__new__)
      207    0.000    0.000    0.001    0.000 base.py:254(is_dtype)
        1    0.000    0.000    0.055    0.055 base.py:303(_try_aggregate_string_function)
        1    0.000    0.000    0.007    0.007 base.py:3142(get_indexer)
        1    0.000    0.000    0.000    0.000 base.py:333(_get_cython_func)
        1    0.000    0.000    0.000    0.000 base.py:3461(_can_reindex)
        1    0.000    0.000    0.015    0.015 base.py:3478(reindex)
        2    0.000    0.000    0.000    0.000 base.py:381(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:397(ndim)
       20    0.000    0.000    0.000    0.000 base.py:4070(_values)
        2    0.000    0.000    0.000    0.000 base.py:4096(_get_engine_target)
      204    0.000    0.000    0.001    0.000 base.py:411(find)
        6    0.000    0.000    0.000    0.000 base.py:425(_simple_new)
        6    0.000    0.000    0.000    0.000 base.py:4279(__getitem__)
        1    0.000    0.000    0.000    0.000 base.py:429(size)
        3    0.000    0.000    0.004    0.001 base.py:4393(equals)
        1    0.000    0.000    0.000    0.000 base.py:4472(identical)
        2    0.000    0.000    0.027    0.013 base.py:4749(argsort)
        2    0.000    0.000    0.008    0.004 base.py:5001(_index_as_unique)
        1    0.000    0.000    0.000    0.000 base.py:5011(_maybe_promote)
        1    0.000    0.000    0.000    0.000 base.py:503(to_numpy)
        2    0.000    0.000    0.000    0.000 base.py:510(_shallow_copy)
        3    0.000    0.000    0.000    0.000 base.py:532(is_)
       16    0.000    0.000    0.000    0.000 base.py:563(_reset_identity)
        4    0.000    0.000    0.000    0.000 base.py:574(_engine)
        1    0.000    0.000    0.000    0.000 base.py:5796(ensure_index_from_sequences)
        5    0.000    0.000    0.000    0.000 base.py:581(<lambda>)
       26    0.000    0.000    0.031    0.001 base.py:5836(ensure_index)
        1    0.000    0.000    0.000    0.000 base.py:5920(ensure_has_len)
       22    0.000    0.000    0.000    0.000 base.py:5953(maybe_extract_name)
        4    0.000    0.000    0.000    0.000 base.py:5969(_maybe_cast_with_dtype)
       54    0.000    0.000    0.000    0.000 base.py:600(__len__)
        4    0.000    0.000    0.021    0.005 base.py:6023(_maybe_cast_data_without_dtype)
        2    0.000    0.000    0.000    0.000 base.py:6137(_maybe_asobject)
        1    0.000    0.000    0.000    0.000 base.py:618(empty)
        3    0.000    0.000    0.000    0.000 base.py:623(dtype)
        6    0.000    0.000    0.068    0.011 base.py:742(take)
        6    0.000    0.000    0.000    0.000 base.py:756(_maybe_disallow_fill)
        1    0.000    0.000    0.000    0.000 base.py:796(__iter__)
       21    0.000    0.000    0.010    0.000 blocks.py:127(__init__)
        7    0.000    0.000    0.040    0.006 blocks.py:1378(take_nd)
       15    0.000    0.000    0.000    0.000 blocks.py:147(_maybe_coerce_values)
       21    0.000    0.000    0.000    0.000 blocks.py:161(_check_ndim)
        6    0.000    0.000    0.000    0.000 blocks.py:233(internal_values)
        6    0.000    0.000    0.000    0.000 blocks.py:2515(_maybe_coerce_values)
        6    0.000    0.000    0.000    0.000 blocks.py:261(fill_value)
       48    0.000    0.000    0.000    0.000 blocks.py:265(mgr_locs)
       14    0.000    0.000    0.001    0.000 blocks.py:2672(get_block_type)
       25    0.010    0.000    0.010    0.000 blocks.py:269(mgr_locs)
        8    0.000    0.000    0.010    0.001 blocks.py:2721(make_block)
        4    0.000    0.000    0.000    0.000 blocks.py:2748(extend_blocks)
        2    0.000    0.000    0.000    0.000 blocks.py:276(make_block)
       13    0.000    0.000    0.000    0.000 blocks.py:288(make_block_same_class)
        5    0.000    0.000    0.000    0.000 blocks.py:343(shape)
       11    0.000    0.000    0.000    0.000 blocks.py:347(dtype)
        2    0.000    0.000    0.048    0.024 blocks.py:372(apply)
        2    0.000    0.000    0.000    0.000 blocks.py:403(_split_op_result)
        2    0.000    0.000    0.000    0.000 blocks.py:697(convert)
        6    0.000    0.000    0.000    0.000 blocks.py:752(copy)
        7    0.000    0.000    0.000    0.000 cast.py:1257(maybe_castable)
        5    0.000    0.000    0.000    0.000 cast.py:1273(maybe_infer_to_datetimelike)
        8    0.000    0.000    0.000    0.000 cast.py:1379(maybe_cast_to_datetime)
        2    0.000    0.000    0.010    0.005 cast.py:161(maybe_downcast_to_dtype)
        4    0.000    0.000    0.000    0.000 cast.py:1617(construct_1d_object_array_from_listlike)
        5    0.000    0.000    0.000    0.000 cast.py:1642(construct_1d_ndarray_preserving_na)
        4    0.000    0.000    0.011    0.003 cast.py:226(maybe_downcast_numeric)
        4    0.000    0.000    0.000    0.000 cast.py:342(maybe_cast_result_dtype)
        8    0.000    0.000    0.001    0.000 cast.py:542(maybe_promote)
        8    0.000    0.000    0.000    0.000 cast.py:698(_ensure_dtype_type)
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
      106    0.001    0.000    0.012    0.000 codecs.py:319(decode)
      106    0.000    0.000    0.000    0.000 codecs.py:331(getstate)
        1    0.000    0.000    0.000    0.000 common.py:1032(is_datetime_or_timedelta_dtype)
        1    0.000    0.000    0.000    0.000 common.py:108(is_url)
        1    0.000    0.000    0.000    0.000 common.py:116(ensure_int_or_float)
       10    0.000    0.000    0.000    0.000 common.py:1187(needs_i8_conversion)
        2    0.000    0.000    0.000    0.000 common.py:1234(is_numeric_dtype)
        3    0.000    0.000    0.000    0.000 common.py:126(_expand_user)
        1    0.000    0.000    0.000    0.000 common.py:1276(is_string_like_dtype)
        6    0.000    0.000    0.000    0.000 common.py:129(cast_scalar_indexer)
        1    0.000    0.000    0.000    0.000 common.py:1304(<lambda>)
       47    0.000    0.000    0.000    0.000 common.py:1307(is_float_dtype)
       38    0.000    0.000    0.000    0.000 common.py:1341(is_bool_dtype)
        1    0.000    0.000    0.000    0.000 common.py:145(validate_header_arg)
      200    0.000    0.000    0.001    0.000 common.py:1470(is_extension_array_dtype)
        1    0.000    0.000    0.000    0.000 common.py:1519(is_complex_dtype)
        2    0.000    0.000    0.000    0.000 common.py:154(stringify_path)
       20    0.000    0.000    0.000    0.000 common.py:1551(_is_dtype)
       81    0.000    0.000    0.000    0.000 common.py:1575(get_dtype)
      207    0.000    0.000    0.001    0.000 common.py:1610(_is_dtype_type)
        9    0.000    0.000    0.000    0.000 common.py:1743(validate_all_hashable)
       18    0.000    0.000    0.000    0.000 common.py:1762(<genexpr>)
       34    0.000    0.000    0.000    0.000 common.py:1769(pandas_dtype)
      116    0.000    0.000    0.000    0.000 common.py:185(classes)
      116    0.000    0.000    0.000    0.000 common.py:187(<lambda>)
       91    0.000    0.000    0.000    0.000 common.py:190(classes_and_not_datetimelike)
        1    0.000    0.000    0.000    0.000 common.py:191(count_not_none)
        5    0.000    0.000    0.000    0.000 common.py:195(<genexpr>)
       91    0.000    0.000    0.000    0.000 common.py:195(<lambda>)
       10    0.000    0.000    0.000    0.000 common.py:198(asarray_tuplesafe)
        1    0.000    0.000    0.000    0.000 common.py:198(is_fsspec_url)
       54    0.000    0.000    0.000    0.000 common.py:201(is_object_dtype)
        1    0.000    0.000    0.001    0.001 common.py:210(_get_filepath_or_buffer)
       21    0.000    0.000    0.000    0.000 common.py:231(is_sparse)
        2    0.000    0.000    0.000    0.000 common.py:254(maybe_iterable_to_list)
       14    0.000    0.000    0.000    0.000 common.py:355(is_datetime64_dtype)
       32    0.000    0.000    0.000    0.000 common.py:388(is_datetime64tz_dtype)
        1    0.000    0.000    0.000    0.000 common.py:403(get_compression_method)
       32    0.000    0.000    0.000    0.000 common.py:429(is_timedelta64_dtype)
        1    0.000    0.000    0.000    0.000 common.py:438(infer_compression)
       45    0.000    0.000    0.000    0.000 common.py:463(is_period_dtype)
        1    0.000    0.000    0.016    0.016 common.py:491(get_handle)
       40    0.000    0.000    0.000    0.000 common.py:499(is_interval_dtype)
      116    0.000    0.000    0.001    0.000 common.py:537(is_categorical_dtype)
       19    0.000    0.000    0.000    0.000 common.py:573(is_string_dtype)
       12    0.000    0.000    0.000    0.000 common.py:602(condition)
        2    0.000    0.000    0.000    0.000 common.py:605(is_excluded_dtype)
        8    0.000    0.000    0.000    0.000 common.py:610(<genexpr>)
       14    0.000    0.000    0.000    0.000 common.py:615(is_dtype_equal)
       73    0.000    0.000    0.001    0.000 common.py:703(is_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:72(ensure_float)
        8    0.000    0.000    0.000    0.000 common.py:757(is_signed_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:793(_maybe_memory_map)
        1    0.000    0.000    0.000    0.000 common.py:81(close)
        8    0.000    0.000    0.000    0.000 common.py:813(is_unsigned_integer_dtype)
        2    0.000    0.000    0.000    0.000 common.py:846(_is_binary_mode)
       24    0.000    0.000    0.000    0.000 common.py:912(is_datetime64_any_dtype)
        2    0.000    0.000    0.000    0.000 common.py:954(is_datetime64_ns_dtype)
        1    0.000    0.000    0.079    0.079 construction.py:241(init_dict)
        1    0.000    0.000    0.027    0.027 construction.py:333(_homogenize)
       18    0.000    0.000    0.000    0.000 construction.py:354(extract_array)
        9    0.000    0.000    0.027    0.003 construction.py:423(sanitize_array)
        9    0.000    0.000    0.001    0.000 construction.py:554(_try_cast)
        7    0.000    0.000    0.000    0.000 construction.py:612(is_empty_data)
        1    0.000    0.000    0.047    0.047 construction.py:62(arrays_to_mgr)
        2    0.000    0.000    0.033    0.016 construction.py:632(create_series_with_explicit_dtype)
       10    0.000    0.000    0.000    0.000 datetimelike.py:107(_simple_new)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1693(validate_periods)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1719(validate_endpoints)
        5    0.000    0.000    0.000    0.000 datetimelike.py:1752(validate_inferred_freq)
        5    0.000    0.000    0.000    0.000 datetimelike.py:1787(maybe_infer_freq)
        4    0.000    0.000    0.073    0.018 datetimelike.py:201(take)
        8    0.000    0.000    0.000    0.000 datetimelike.py:205(_ndarray)
        5    0.000    0.000    0.000    0.000 datetimelike.py:209(_from_backing_data)
        1    0.000    0.000    0.001    0.001 datetimelike.py:234(min)
        9    0.000    0.000    0.000    0.000 datetimelike.py:235(asi8)
        2    0.000    0.000    0.000    0.000 datetimelike.py:268(__array__)
        2    0.000    0.000    0.000    0.000 datetimelike.py:274(__getitem__)
        1    0.000    0.000    0.000    0.000 datetimelike.py:288(_get_getitem_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:291(max)
        1    0.000    0.000    0.000    0.000 datetimelike.py:337(astype)
        1    0.000    0.000    0.000    0.000 datetimelike.py:763(isna)
        1    0.000    0.000    0.000    0.000 datetimelike.py:766(_isnan)
        1    0.000    0.000    0.001    0.001 datetimelike.py:773(_hasnans)
       10    0.000    0.000    0.000    0.000 datetimelike.py:810(freq)
        1    0.001    0.001    0.087    0.087 datetimelike.py:834(inferred_freq)
        1    0.000    0.000    0.034    0.034 datetimes.py:143(_maybe_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:183(_box_as_indexlike)
        5    0.000    0.000    0.000    0.000 datetimes.py:1891(sequence_to_dt64ns)
        1    0.000    0.000    0.335    0.335 datetimes.py:2032(objects_to_datetime64ns)
        6    0.000    0.000    0.000    0.000 datetimes.py:2116(maybe_convert_dtype)
        5    0.000    0.000    0.000    0.000 datetimes.py:2209(_validate_dt64_dtype)
       10    0.000    0.000    0.000    0.000 datetimes.py:2251(validate_tz_from_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:2298(_infer_tz_from_endpoints)
        1    0.000    0.000    0.000    0.000 datetimes.py:2341(_maybe_normalize_endpoints)
        1    0.000    0.000    0.336    0.336 datetimes.py:267(_convert_listlike_datetimes)
        5    0.000    0.000    0.001    0.000 datetimes.py:282(__new__)
       12    0.000    0.000    0.000    0.000 datetimes.py:290(_simple_new)
        5    0.000    0.000    0.000    0.000 datetimes.py:309(_from_sequence_not_strict)
        1    0.000    0.000    0.000    0.000 datetimes.py:354(_generate_range)
        3    0.000    0.000    0.000    0.000 datetimes.py:484(_box_func)
       49    0.000    0.000    0.000    0.000 datetimes.py:487(dtype)
        7    0.000    0.000    0.000    0.000 datetimes.py:509(tz)
        2    0.000    0.000    0.000    0.000 datetimes.py:551(__array__)
        1    0.000    0.000    0.000    0.000 datetimes.py:583(astype)
        1    0.000    0.000    0.370    0.370 datetimes.py:609(to_datetime)
        7    0.000    0.000    0.000    0.000 datetimes.py:61(tz_to_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:87(should_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:919(date_range)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1078(construct_from_string)
       31    0.000    0.000    0.000    0.000 dtypes.py:1132(is_dtype)
        2    0.000    0.000    0.000    0.000 dtypes.py:277(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:711(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:870(construct_from_string)
       37    0.000    0.000    0.000    0.000 dtypes.py:923(is_dtype)
        4    0.000    0.000    0.000    0.000 extension.py:216(_shallow_copy)
        2    0.000    0.000    0.000    0.000 extension.py:237(__getitem__)
        1    0.000    0.000    0.000    0.000 extension.py:310(astype)
        1    0.000    0.000    0.000    0.000 extension.py:322(_isnan)
        3    0.000    0.000    0.000    0.000 extension.py:345(_get_engine_target)
        1    0.000    0.000    0.087    0.087 extension.py:49(cached)
       19    0.000    0.000    0.000    0.000 extension.py:58(fget)
       12    0.000    0.000    0.000    0.000 flags.py:47(__init__)
        7    0.000    0.000    0.000    0.000 flags.py:51(allows_duplicate_labels)
        7    0.000    0.000    0.000    0.000 flags.py:83(allows_duplicate_labels)
        5    0.000    0.000    0.000    0.000 frame.py:482(_constructor)
        6    0.000    0.000    0.079    0.013 frame.py:502(__init__)
        1    0.000    0.000    0.000    0.000 frame.py:6603(groupby)
        1    0.000    0.000    0.085    0.085 frequencies.py:120(infer_freq)
        1    0.000    0.000    0.001    0.001 frequencies.py:191(__init__)
        1    0.000    0.000    0.084    0.084 frequencies.py:230(get_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:489(is_superperiod)
        2    0.000    0.000    0.000    0.000 frequencies.py:547(_maybe_coerce_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:572(_is_annual)
        1    0.000    0.000    0.000    0.000 frequencies.py:577(_is_quarterly)
        1    0.000    0.000    0.000    0.000 frequencies.py:582(_is_monthly)
        1    0.000    0.000    0.000    0.000 frequencies.py:587(_is_weekly)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2350(_all_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2355(all)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3102(_ndim_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3106(ndim)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:433(_repeat_dispatcher)
        1    0.000    0.000    0.002    0.002 fromnumeric.py:437(repeat)
        1    0.000    0.000    0.002    0.002 fromnumeric.py:52(_wrapfunc)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:840(_sort_dispatcher)
        2    0.000    0.000    0.006    0.003 fromnumeric.py:844(sort)
        1    0.000    0.000    0.000    0.000 function.py:375(validate_resampler_func)
        2    0.000    0.000    0.000    0.000 function.py:390(validate_minmax_axis)
        9    0.000    0.000    0.000    0.000 function.py:45(__call__)
        1    0.000    0.000    0.000    0.000 function_base.py:1149(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 function_base.py:1153(diff)
        1    0.000    0.000    0.055    0.055 generic.py:1012(_cython_agg_general)
        1    0.000    0.000    0.054    0.054 generic.py:1020(_cython_agg_blocks)
        2    0.000    0.000    0.000    0.000 generic.py:1029(cast_agg_result)
        1    0.000    0.000    0.006    0.006 generic.py:10565(_logical_func)
        1    0.000    0.000    0.006    0.006 generic.py:10593(any)
        1    0.000    0.000    0.006    0.006 generic.py:10858(any)
        2    0.001    0.001    0.047    0.024 generic.py:1094(blk_func)
        1    0.000    0.000    0.000    0.000 generic.py:1603(_get_data_to_aggregate)
        1    0.000    0.000    0.001    0.001 generic.py:1688(_wrap_agged_blocks)
       12    0.000    0.000    0.000    0.000 generic.py:188(__init__)
        7    0.000    0.000    0.000    0.000 generic.py:227(attrs)
       14    0.000    0.000    0.000    0.000 generic.py:248(flags)
      845    0.001    0.000    0.001    0.000 generic.py:30(_check)
        4    0.000    0.000    0.000    0.000 generic.py:340(_validate_dtype)
        2    0.000    0.000    0.073    0.036 generic.py:3492(take)
        1    0.000    0.000    0.000    0.000 generic.py:424(_construct_axes_from_arguments)
        1    0.000    0.000    0.000    0.000 generic.py:453(<dictcomp>)
       13    0.000    0.000    0.000    0.000 generic.py:456(_get_axis_number)
        1    0.000    0.000    0.017    0.017 generic.py:4564(reindex)
        5    0.000    0.000    0.000    0.000 generic.py:470(_get_axis)
        3    0.000    0.000    0.000    0.000 generic.py:476(_get_block_manager_axis)
        2    0.000    0.000    0.000    0.000 generic.py:4797(<genexpr>)
        1    0.000    0.000    0.017    0.017 generic.py:4815(_reindex_axes)
        1    0.000    0.000    0.002    0.002 generic.py:4854(_reindex_with_indexers)
        7    0.000    0.000    0.000    0.000 generic.py:5411(__finalize__)
        6    0.000    0.000    0.000    0.000 generic.py:5449(__getattr__)
        9    0.000    0.000    0.000    0.000 generic.py:5467(__setattr__)
        4    0.000    0.000    0.000    0.000 generic.py:5522(_protect_consolidate)
        3    0.000    0.000    0.000    0.000 generic.py:5534(_consolidate_inplace)
        3    0.000    0.000    0.000    0.000 generic.py:5538(f)
        1    0.000    0.000    0.000    0.000 generic.py:5543(_consolidate)
        1    0.000    0.000    0.000    0.000 generic.py:5553(<lambda>)
        1    0.000    0.000    0.000    0.000 generic.py:6013(_convert)
        1    0.000    0.000    0.001    0.001 generic.py:7416(isna)
        1    0.000    0.000    0.218    0.218 generic.py:7983(resample)
        1    0.000    0.000    0.055    0.055 generic.py:931(aggregate)
        1    0.000    0.000    0.055    0.055 groupby.py:1445(mean)
        1    0.000    0.000    0.000    0.000 groupby.py:2840(_reindex_output)
        1    0.000    0.000    0.000    0.000 groupby.py:518(__init__)
        1    0.000    0.000    0.000    0.000 groupby.py:674(_selected_obj)
        1    0.000    0.000    0.000    0.000 groupby.py:746(__getattr__)
        1    0.000    0.000    0.000    0.000 grouper.py:233(__new__)
        1    0.000    0.000    0.000    0.000 grouper.py:276(__init__)
        3    0.000    0.000    0.000    0.000 grouper.py:293(ax)
        2    0.004    0.002    0.160    0.080 grouper.py:325(_set_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:439(__init__)
        1    0.000    0.000    0.000    0.000 grouper.py:635(get_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:861(_convert_grouper)
        1    0.000    0.000    0.000    0.000 index_tricks.py:317(__getitem__)
        2    0.008    0.004    0.008    0.004 indexers.py:225(maybe_convert_indices)
        1    0.000    0.000    0.000    0.000 indexers.py:313(deprecate_ndim_indexing)
        2    0.000    0.000    0.000    0.000 indexers.py:363(check_array_indexer)
       10    0.000    0.000    0.000    0.000 inference.py:185(is_array_like)
        6    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       20    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       35    0.000    0.000    0.000    0.000 inference.py:322(is_hashable)
        2    0.000    0.000    0.000    0.000 inference.py:96(is_file_like)
        7    0.000    0.000    0.000    0.000 managers.py:126(__init__)
        3    0.000    0.000    0.041    0.014 managers.py:1260(reindex_indexer)
        2    0.000    0.000    0.039    0.020 managers.py:1311(<listcomp>)
        7    0.000    0.000    0.000    0.000 managers.py:132(<listcomp>)
        1    0.000    0.000    0.001    0.001 managers.py:1327(_slice_take_blocks_ax0)
        2    0.007    0.003    0.073    0.036 managers.py:1454(take)
        5    0.000    0.000    0.000    0.000 managers.py:150(from_blocks)
        4    0.000    0.000    0.000    0.000 managers.py:1545(__init__)
        1    0.000    0.000    0.000    0.000 managers.py:1566(from_blocks)
        3    0.000    0.000    0.010    0.003 managers.py:1577(from_array)
        6    0.000    0.000    0.000    0.000 managers.py:1588(_block)
        6    0.000    0.000    0.000    0.000 managers.py:1626(internal_values)
        1    0.000    0.000    0.000    0.000 managers.py:1634(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:1640(_consolidate_inplace)
        1    0.000    0.000    0.019    0.019 managers.py:1690(create_block_manager_from_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1695(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:1699(<listcomp>)
        1    0.000    0.000    0.019    0.019 managers.py:1733(_form_blocks)
        1    0.000    0.000    0.007    0.007 managers.py:1829(_simple_blockify)
        2    0.000    0.000    0.008    0.004 managers.py:1844(_multi_blockify)
        4    0.000    0.000    0.000    0.000 managers.py:1847(<lambda>)
        3    0.010    0.003    0.014    0.005 managers.py:1860(_stack_arrays)
        6    0.000    0.000    0.000    0.000 managers.py:1863(_asarray_compat)
        3    0.000    0.000    0.000    0.000 managers.py:1869(_shape_compat)
        1    0.000    0.000    0.000    0.000 managers.py:1958(_preprocess_slice_or_indexer)
        7    0.000    0.000    0.000    0.000 managers.py:206(shape)
       20    0.000    0.000    0.000    0.000 managers.py:208(<genexpr>)
       19    0.000    0.000    0.000    0.000 managers.py:210(ndim)
        6    0.000    0.000    0.000    0.000 managers.py:253(items)
        1    0.000    0.000    0.000    0.000 managers.py:303(__len__)
        2    0.000    0.000    0.000    0.000 managers.py:318(_verify_integrity)
        7    0.000    0.000    0.000    0.000 managers.py:320(<genexpr>)
        2    0.000    0.000    0.048    0.024 managers.py:376(apply)
        2    0.000    0.000    0.000    0.000 managers.py:405(<dictcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:633(convert)
        8    0.000    0.000    0.000    0.000 managers.py:681(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:689(_consolidate_check)
        1    0.000    0.000    0.000    0.000 managers.py:690(<listcomp>)
        1    0.000    0.000    0.006    0.006 managers.py:743(get_numeric_data)
        1    0.000    0.000    0.000    0.000 managers.py:750(<listcomp>)
        2    0.000    0.000    0.006    0.003 managers.py:752(_combine)
        2    0.000    0.000    0.000    0.000 managers.py:760(<listcomp>)
        4    0.000    0.000    0.000    0.000 managers.py:975(consolidate)
        5    0.000    0.000    0.000    0.000 managers.py:991(_consolidate_inplace)
       12    0.000    0.000    0.001    0.000 missing.py:133(_isna)
        5    0.000    0.000    0.001    0.000 missing.py:202(_isna_ndarraylike)
        1    0.000    0.000    0.000    0.000 missing.py:244(_isna_string_dtype)
        2    0.010    0.005    0.010    0.005 missing.py:264(notna)
        2    0.000    0.000    0.000    0.000 missing.py:350(isna_compat)
        3    0.000    0.000    0.004    0.001 missing.py:367(array_equivalent)
        1    0.000    0.000    0.004    0.004 missing.py:465(_array_equivalent_object)
       12    0.000    0.000    0.001    0.000 missing.py:50(isna)
        2    0.000    0.000    0.000    0.000 missing.py:528(maybe_fill)
        2    0.000    0.000    0.000    0.000 missing.py:64(clean_fill_method)
        2    0.000    0.000    0.000    0.000 missing.py:721(clean_reindex_fill_method)
        2    0.000    0.000    0.000    0.000 multiarray.py:1054(copyto)
       10    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        2    0.000    0.000    0.000    0.000 multiarray.py:593(min_scalar_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:644(result_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:75(empty_like)
        1    0.000    0.000    0.000    0.000 nanops.py:174(_get_fill_value)
        1    0.000    0.000    0.000    0.000 nanops.py:199(_maybe_get_mask)
        1    0.000    0.000    0.000    0.000 nanops.py:243(_get_values)
        1    0.000    0.000    0.000    0.000 nanops.py:330(_na_ok_dtype)
        1    0.000    0.000    0.006    0.006 nanops.py:442(nanany)
        3    0.000    0.000    0.000    0.000 ntpath.py:289(expanduser)
        1    0.000    0.000    0.000    0.000 numba_.py:15(maybe_use_numba)
        2    0.000    0.000    0.000    0.000 numeric.py:2260(_isclose_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:2264(isclose)
        2    0.000    0.000    0.000    0.000 numeric.py:2344(within_tol)
        2    0.000    0.000    0.000    0.000 numeric.py:71(_zeros_like_dispatcher)
        2    0.000    0.000    0.002    0.001 numeric.py:75(zeros_like)
       30    0.000    0.000    0.000    0.000 numerictypes.py:285(issubclass_)
       15    0.000    0.000    0.000    0.000 numerictypes.py:359(issubdtype)
        2    0.000    0.000    0.000    0.000 numerictypes.py:575(_can_coerce_all)
        1    0.000    0.000    0.000    0.000 numerictypes.py:599(find_common_type)
        1    0.000    0.000    0.000    0.000 numerictypes.py:651(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:652(<listcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:326(ngroups)
        3    0.000    0.000    0.000    0.000 ops.py:397(_get_cython_function)
        2    0.000    0.000    0.005    0.003 ops.py:434(_get_cython_func_and_vals)
        2    0.000    0.000    0.000    0.000 ops.py:469(_disallow_invalid_ops)
        2    0.002    0.001    0.046    0.023 ops.py:550(_cython_operation)
        2    0.021    0.011    0.024    0.012 ops.py:664(_aggregate)
        1    0.000    0.000    0.000    0.000 ops.py:796(__init__)
        1    0.000    0.000    0.003    0.003 ops.py:876(group_info)
        1    0.000    0.000    0.000    0.000 ops.py:899(result_index)
        1    0.000    0.000    0.000    0.000 ops.py:906(levels)
        1    0.000    0.000    0.000    0.000 ops.py:910(names)
        1    0.000    0.000    0.000    0.000 ops.py:914(groupings)
        1    0.000    0.000    0.000    0.000 ops.py:916(<listcomp>)
        1    0.000    0.000    0.000    0.000 os.py:1073(__subclasshook__)
        2    0.000    0.000    0.000    0.000 parse.py:100(_noop)
        2    0.000    0.000    0.000    0.000 parse.py:111(_coerce_args)
        1    0.000    0.000    0.000    0.000 parse.py:369(urlparse)
        1    0.000    0.000    0.000    0.000 parse.py:416(_checknetloc)
        1    0.000    0.000    0.000    0.000 parse.py:434(urlsplit)
        1    0.000    0.000    0.087    0.087 parsers.py:1039(_make_engine)
        1    0.000    0.000    1.813    1.813 parsers.py:1055(read)
        1    0.000    0.000    0.000    0.000 parsers.py:1086(__enter__)
        1    0.000    0.000    0.001    0.001 parsers.py:1089(__exit__)
        4    0.000    0.000    0.000    0.000 parsers.py:1093(_is_index_col)
        3    0.000    0.000    0.000    0.000 parsers.py:1097(_is_potential_multi_index)
        6    0.000    0.000    0.000    0.000 parsers.py:1121(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1199(_validate_usecols_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1249(_validate_parse_dates_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1272(__init__)
        1    0.000    0.000    0.016    0.016 parsers.py:1358(_open_handles)
        1    0.000    0.000    0.000    0.000 parsers.py:1371(_validate_parse_dates_presence)
        2    0.000    0.000    0.000    0.000 parsers.py:1398(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1407(<setcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:1419(close)
        2    0.000    0.000    0.000    0.000 parsers.py:1423(_has_complex_date_col)
        1    0.000    0.000    0.000    0.000 parsers.py:1431(_should_parse_dates)
        1    0.000    0.000    0.000    0.000 parsers.py:1509(_maybe_dedup_names)
        2    0.000    0.000    0.000    0.000 parsers.py:1539(_maybe_make_multi_index_columns)
        1    0.000    0.000    0.414    0.414 parsers.py:1545(_make_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1575(_get_simple_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1576(ix)
        1    0.006    0.006    0.414    0.414 parsers.py:1624(_agg_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1729(_infer_types)
        1    0.000    0.000    0.000    0.000 parsers.py:1835(_do_date_conversions)
        1    0.070    0.070    0.087    0.087 parsers.py:1853(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:1987(close)
        1    0.000    0.000    0.000    0.000 parsers.py:1996(_set_noconvert_columns)
        1    0.000    0.000    0.000    0.000 parsers.py:2021(_set)
        1    0.000    0.000    1.734    1.734 parsers.py:2059(read)
        1    0.000    0.000    0.000    0.000 parsers.py:2134(<listcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:2136(<dictcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:3299(_make_date_converter)
        1    0.000    0.000    0.407    0.407 parsers.py:3302(converter)
        1    0.000    0.000    0.000    0.000 parsers.py:3344(_process_date_conversion)
        1    0.000    0.000    0.000    0.000 parsers.py:3353(_isindex)
        1    0.000    0.000    0.000    0.000 parsers.py:3432(_clean_na_values)
        1    0.000    0.000    0.000    0.000 parsers.py:3476(_clean_index_names)
        1    0.000    0.000    0.000    0.000 parsers.py:3786(_refine_defaults_read)
        1    0.000    0.000    0.000    0.000 parsers.py:3875(_extract_dialect)
        2    0.000    0.000    0.000    0.000 parsers.py:394(validate_integer)
        1    0.000    0.000    0.000    0.000 parsers.py:3971(_validate_skipfooter)
        1    0.000    0.000    0.000    0.000 parsers.py:423(_validate_names)
        1    0.014    0.014    1.916    1.916 parsers.py:447(_read)
        1    0.010    0.010    1.926    1.926 parsers.py:533(read_csv)
        1    0.000    0.000    0.087    0.087 parsers.py:780(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:821(close)
        1    0.000    0.000    0.000    0.000 parsers.py:824(_get_options_with_defaults)
        1    0.000    0.000    0.000    0.000 parsers.py:865(_check_file_or_buffer)
        1    0.000    0.000    0.000    0.000 parsers.py:876(_clean_options)
        4    0.000    0.000    0.000    0.000 re.py:203(sub)
        2    0.000    0.000    0.000    0.000 re.py:223(split)
        6    0.000    0.000    0.000    0.000 re.py:289(_compile)
        1    0.000    0.000    0.001    0.001 resample.py:1(<module>)
        1    0.000    0.000    0.000    0.000 resample.py:1032(DatetimeIndexResampler)
        1    0.000    0.000    0.024    0.024 resample.py:1037(_get_binner_for_time)
        1    0.000    0.000    0.166    0.166 resample.py:1044(_downsample)
        1    0.000    0.000    0.000    0.000 resample.py:1144(_wrap_result)
        1    0.000    0.000    0.000    0.000 resample.py:1154(DatetimeIndexResamplerGroupby)
        2    0.000    0.000    0.000    0.000 resample.py:116(__getattr__)
        1    0.000    0.000    0.000    0.000 resample.py:1164(PeriodIndexResampler)
        1    0.000    0.000    0.000    0.000 resample.py:1268(PeriodIndexResamplerGroupby)
        1    0.000    0.000    0.000    0.000 resample.py:1278(TimedeltaIndexResampler)
        1    0.000    0.000    0.000    0.000 resample.py:1296(TimedeltaIndexResamplerGroupby)
        1    0.000    0.000    0.202    0.202 resample.py:1306(get_resampler)
        1    0.000    0.000    0.000    0.000 resample.py:1331(TimeGrouper)
        1    0.000    0.000    0.041    0.041 resample.py:1355(__init__)
        1    0.000    0.000    0.000    0.000 resample.py:142(obj)
        1    0.000    0.000    0.160    0.160 resample.py:1447(_get_resampler)
        2    0.000    0.000    0.000    0.000 resample.py:146(ax)
        1    0.000    0.000    0.024    0.024 resample.py:1488(_get_time_bins)
        1    0.000    0.000    0.000    0.000 resample.py:1551(_adjust_bin_edges)
        1    0.000    0.000    0.000    0.000 resample.py:170(_convert_obj)
        1    0.000    0.000    0.021    0.021 resample.py:1710(_get_timestamp_range_edges)
        1    0.000    0.000    0.021    0.021 resample.py:1834(_adjust_dates_anchored)
        1    0.000    0.000    0.024    0.024 resample.py:188(_set_binner)
        1    0.000    0.000    0.024    0.024 resample.py:197(_get_binner)
        1    0.000    0.000    0.000    0.000 resample.py:404(_apply_loffset)
        1    0.000    0.000    0.000    0.000 resample.py:441(_wrap_result)
        1    0.000    0.000    0.001    0.001 resample.py:49(Resampler)
        1    0.000    0.000    0.037    0.037 resample.py:86(__init__)
        1    0.000    0.000    0.166    0.166 resample.py:966(g)
        1    0.000    0.000    0.000    0.000 resample.py:984(_GroupByMixin)
      6/3    0.000    0.000    0.060    0.020 series.py:238(__init__)
        2    0.000    0.000    0.050    0.025 series.py:372(_init_dict)
        1    0.000    0.000    0.006    0.006 series.py:4149(_reduce)
        1    0.000    0.000    0.000    0.000 series.py:4195(_needs_reindex_multi)
        2    0.000    0.000    0.000    0.000 series.py:422(_constructor)
        1    0.000    0.000    0.017    0.017 series.py:4337(reindex)
        5    0.000    0.000    0.000    0.000 series.py:439(_set_axis)
        1    0.000    0.000    0.001    0.001 series.py:4778(isna)
       10    0.000    0.000    0.000    0.000 series.py:488(name)
        9    0.000    0.000    0.000    0.000 series.py:538(name)
        6    0.000    0.000    0.000    0.000 series.py:585(_values)
        7    0.000    0.000    0.001    0.000 textwrap.py:414(dedent)
        5    0.000    0.000    0.000    0.000 typing.py:121(_type_convert)
        5    0.000    0.000    0.000    0.000 typing.py:130(_type_check)
        2    0.000    0.000    0.000    0.000 typing.py:1333(cast)
        1    0.000    0.000    0.000    0.000 typing.py:1518(no_type_check)
        2    0.000    0.000    0.000    0.000 typing.py:182(_collect_type_vars)
       16    0.000    0.000    0.000    0.000 typing.py:2020(new_type)
        2    0.000    0.000    0.000    0.000 typing.py:209(_deduplicate)
        2    0.000    0.000    0.000    0.000 typing.py:223(_remove_dups_flatten)
      9/8    0.000    0.000    0.000    0.000 typing.py:262(inner)
        1    0.000    0.000    0.000    0.000 typing.py:328(__repr__)
      3/2    0.000    0.000    0.000    0.000 typing.py:343(__getitem__)
        2    0.000    0.000    0.000    0.000 typing.py:424(Union)
        6    0.000    0.000    0.000    0.000 typing.py:456(<genexpr>)
        1    0.000    0.000    0.000    0.000 typing.py:462(Optional)
        7    0.000    0.000    0.000    0.000 typing.py:557(__hash__)
       14    0.000    0.000    0.000    0.000 typing.py:648(_is_dunder)
        2    0.000    0.000    0.000    0.000 typing.py:660(__init__)
       14    0.000    0.000    0.000    0.000 typing.py:696(__setattr__)
        1    0.000    0.000    0.000    0.000 typing.py:702(__instancecheck__)
        2    0.000    0.000    0.000    0.000 typing.py:722(__init__)
       17    0.000    0.000    0.000    0.000 typing.py:726(<genexpr>)
        1    0.000    0.000    0.000    0.000 typing.py:831(__subclasscheck__)
       12    0.000    0.000    0.000    0.000 typing.py:911(__eq__)
        3    0.000    0.000    0.000    0.000 typing.py:916(__hash__)
        7    0.000    0.000    0.000    0.000 typing.py:990(__init_subclass__)
       31    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FF922475C60}
       50    0.000    0.000    0.002    0.000 {built-in method _abc._abc_instancecheck}
   208/18    0.002    0.000    0.002    0.000 {built-in method _abc._abc_subclasscheck}
      106    0.012    0.000    0.012    0.000 {built-in method _codecs.utf_8_decode}
        1    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
        5    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        5    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        9    0.000    0.000    0.001    0.000 {built-in method builtins.__build_class__}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       21    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        9    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
      2/1    0.000    0.000    2.321    2.321 {built-in method builtins.exec}
1384/1349    0.000    0.000    0.087    0.000 {built-in method builtins.getattr}
      150    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       45    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
2448/2446    0.002    0.000    0.003    0.000 {built-in method builtins.isinstance}
      699    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
  282/227    0.000    0.000    0.001    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        3    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        1    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.000    0.000    0.000    0.000 {built-in method io.open_code}
        1    0.015    0.015    0.015    0.015 {built-in method io.open}
        1    0.000    0.000    0.000    0.000 {built-in method marshal.loads}
        6    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        3    0.000    0.000    0.000    0.000 {built-in method nt.stat}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       87    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    32/22    0.022    0.001    0.030    0.001 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       17    0.012    0.001    0.012    0.001 {built-in method numpy.empty}
       24    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       12    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.checknull}
        1    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
        1    0.335    0.335    0.335    0.335 {built-in method pandas._libs.tslib.array_to_datetime}
        7    0.041    0.006    0.041    0.006 {built-in method pandas._libs.tslibs.offsets.to_offset}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
        2    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        7    0.000    0.000    0.000    0.000 {method '__init_subclass__' of 'object' objects}
        4    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       13    0.000    0.000    0.006    0.000 {method 'any' of 'numpy.ndarray' objects}
       47    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.027    0.013    0.027    0.013 {method 'argsort' of 'numpy.ndarray' objects}
        4    0.001    0.000    0.001    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        1    0.001    0.001    0.001    0.001 {method 'close' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
       15    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        7    0.000    0.000    0.000    0.000 {method 'findall' of 're.Pattern' objects}
       17    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       78    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.007    0.007    0.007    0.007 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
        3    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        9    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       13    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.021    0.021    0.021    0.021 {method 'normalize' of 'pandas._libs.tslibs.timestamps._Timestamp' objects}
       25    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        5    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    0.014    0.014    0.014    0.014 {method 'read' of '_io.BufferedReader' objects}
        1    1.287    1.287    1.320    1.320 {method 'read' of 'pandas._libs.parsers.TextReader' objects}
       19    0.006    0.000    0.006    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        7    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.002    0.002    0.002    0.002 {method 'repeat' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
       12    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'set_noconvert' of 'pandas._libs.parsers.TextReader' objects}
        2    0.006    0.003    0.006    0.003 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
      290    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       11    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        6    0.068    0.011    0.068    0.011 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'time' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       13    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.005    0.002    0.005    0.002 {pandas._libs.algos.ensure_float64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int64}
        9    0.010    0.001    0.010    0.001 {pandas._libs.algos.ensure_object}
        8    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        1    0.001    0.001    0.001    0.001 {pandas._libs.algos.take_1d_object_object}
        2    0.006    0.003    0.006    0.003 {pandas._libs.algos.take_2d_axis0_float64_float64}
        2    0.013    0.007    0.013    0.007 {pandas._libs.algos.take_2d_axis1_int64_int64}
        2    0.010    0.005    0.010    0.005 {pandas._libs.algos.take_2d_axis1_object_object}
        1    0.004    0.004    0.004    0.004 {pandas._libs.lib.array_equivalent_object}
        2    0.008    0.004    0.009    0.004 {pandas._libs.lib.clean_index_list}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.generate_bins_dt64}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.get_reverse_indexer}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
        8    0.046    0.006    0.046    0.006 {pandas._libs.lib.infer_dtype}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
       14    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        4    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
       37    0.000    0.000    0.001    0.000 {pandas._libs.lib.is_list_like}
       45    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        4    0.004    0.001    0.004    0.001 {pandas._libs.lib.maybe_indices_to_slice}
        1    0.027    0.027    0.027    0.027 {pandas._libs.tslibs.parsing.concat_date_cols}
        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.timezones.infer_tzinfo}


         11039 function calls (10924 primitive calls) in 1.636 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       10    0.000    0.000    0.020    0.002 <__array_function__ internals>:2(concatenate)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(empty_like)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(min_scalar_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
        1    0.000    0.000    0.003    0.003 <__array_function__ internals>:2(repeat)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(zeros_like)
       28    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1033(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000    1.635    1.635 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:2(__init__)
        1    0.012    0.012    1.635    1.635 Task4.py:4(dst)
       10    0.000    0.000    0.000    0.000 _asarray.py:110(asanyarray)
       49    0.000    0.000    0.000    0.000 _asarray.py:23(asarray)
        7    0.000    0.000    0.000    0.000 _asarray.py:293(require)
        7    0.000    0.000    0.000    0.000 _asarray.py:382(<setcomp>)
       34    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       34    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       34    0.000    0.000    0.000    0.000 _dtype.py:321(_name_get)
       13    0.000    0.000    0.001    0.000 _methods.py:53(_any)
        6    0.000    0.000    0.000    0.000 _methods.py:59(_all)
       36    0.000    0.000    0.000    0.000 _mixins.py:103(shape)
       32    0.000    0.000    0.000    0.000 _mixins.py:107(__len__)
        4    0.000    0.000    0.000    0.000 _mixins.py:110(ndim)
        2    0.000    0.000    0.000    0.000 _mixins.py:217(__getitem__)
        4    0.000    0.000    0.013    0.003 _mixins.py:60(take)
        1    0.000    0.000    0.000    0.000 _ranges.py:13(generate_regular_range)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        3    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
        1    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
       50    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 aggregation.py:249(maybe_mangle_lambdas)
        1    0.000    0.000    0.000    0.000 aggregation.py:46(reconstruct_func)
        1    0.000    0.000    0.022    0.022 aggregation.py:549(aggregate)
        7    0.000    0.000    0.000    0.000 algorithms.py:1534(_get_take_nd_function)
     10/6    0.000    0.000    0.013    0.002 algorithms.py:1570(take)
        7    0.001    0.000    0.040    0.006 algorithms.py:1661(take_nd)
       11    0.000    0.000    0.000    0.000 base.py:1232(name)
        3    0.000    0.000    0.000    0.000 base.py:1688(is_monotonic)
        5    0.003    0.001    0.003    0.001 base.py:1696(is_monotonic_increasing)
        2    0.038    0.019    0.038    0.019 base.py:1764(is_unique)
        1    0.000    0.000    0.000    0.000 base.py:1803(is_boolean)
       24    0.000    0.000    0.000    0.000 base.py:199(construct_from_string)
        2    0.000    0.000    0.000    0.000 base.py:2127(inferred_type)
        3    0.000    0.000    0.000    0.000 base.py:2134(_is_all_dates)
        1    0.000    0.000    0.000    0.000 base.py:226(_obj_with_exclusions)
     12/6    0.000    0.000    0.001    0.000 base.py:250(__new__)
      207    0.000    0.000    0.001    0.000 base.py:254(is_dtype)
        1    0.000    0.000    0.022    0.022 base.py:303(_try_aggregate_string_function)
        1    0.000    0.000    0.000    0.000 base.py:3142(get_indexer)
        1    0.000    0.000    0.000    0.000 base.py:333(_get_cython_func)
        1    0.000    0.000    0.000    0.000 base.py:3461(_can_reindex)
        1    0.000    0.000    0.000    0.000 base.py:3478(reindex)
        2    0.000    0.000    0.000    0.000 base.py:381(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:397(ndim)
       20    0.000    0.000    0.000    0.000 base.py:4070(_values)
        2    0.000    0.000    0.000    0.000 base.py:4096(_get_engine_target)
      204    0.000    0.000    0.000    0.000 base.py:411(find)
        6    0.000    0.000    0.000    0.000 base.py:425(_simple_new)
        6    0.000    0.000    0.000    0.000 base.py:4279(__getitem__)
        1    0.000    0.000    0.000    0.000 base.py:429(size)
        3    0.000    0.000    0.000    0.000 base.py:4393(equals)
        1    0.000    0.000    0.000    0.000 base.py:4472(identical)
        2    0.000    0.000    0.004    0.002 base.py:4749(argsort)
        2    0.000    0.000    0.000    0.000 base.py:5001(_index_as_unique)
        1    0.000    0.000    0.000    0.000 base.py:5011(_maybe_promote)
        1    0.000    0.000    0.000    0.000 base.py:503(to_numpy)
        2    0.000    0.000    0.000    0.000 base.py:510(_shallow_copy)
        3    0.000    0.000    0.000    0.000 base.py:532(is_)
       16    0.000    0.000    0.000    0.000 base.py:563(_reset_identity)
        4    0.000    0.000    0.000    0.000 base.py:574(_engine)
        1    0.000    0.000    0.000    0.000 base.py:5796(ensure_index_from_sequences)
        5    0.000    0.000    0.000    0.000 base.py:581(<lambda>)
       26    0.000    0.000    0.001    0.000 base.py:5836(ensure_index)
        1    0.000    0.000    0.000    0.000 base.py:5920(ensure_has_len)
       22    0.000    0.000    0.000    0.000 base.py:5953(maybe_extract_name)
        4    0.000    0.000    0.000    0.000 base.py:5969(_maybe_cast_with_dtype)
       54    0.000    0.000    0.000    0.000 base.py:600(__len__)
        4    0.000    0.000    0.000    0.000 base.py:6023(_maybe_cast_data_without_dtype)
        2    0.000    0.000    0.000    0.000 base.py:6137(_maybe_asobject)
        1    0.000    0.000    0.000    0.000 base.py:618(empty)
        3    0.000    0.000    0.000    0.000 base.py:623(dtype)
        6    0.000    0.000    0.013    0.002 base.py:742(take)
        6    0.000    0.000    0.000    0.000 base.py:756(_maybe_disallow_fill)
        1    0.000    0.000    0.000    0.000 base.py:796(__iter__)
       21    0.000    0.000    0.000    0.000 blocks.py:127(__init__)
        7    0.000    0.000    0.041    0.006 blocks.py:1378(take_nd)
       15    0.000    0.000    0.000    0.000 blocks.py:147(_maybe_coerce_values)
       21    0.000    0.000    0.000    0.000 blocks.py:161(_check_ndim)
        6    0.000    0.000    0.000    0.000 blocks.py:233(internal_values)
        6    0.000    0.000    0.000    0.000 blocks.py:2515(_maybe_coerce_values)
        6    0.000    0.000    0.000    0.000 blocks.py:261(fill_value)
       48    0.000    0.000    0.000    0.000 blocks.py:265(mgr_locs)
       14    0.000    0.000    0.000    0.000 blocks.py:2672(get_block_type)
       25    0.000    0.000    0.000    0.000 blocks.py:269(mgr_locs)
        8    0.000    0.000    0.001    0.000 blocks.py:2721(make_block)
        4    0.000    0.000    0.000    0.000 blocks.py:2748(extend_blocks)
        2    0.000    0.000    0.000    0.000 blocks.py:276(make_block)
       13    0.000    0.000    0.000    0.000 blocks.py:288(make_block_same_class)
        5    0.000    0.000    0.000    0.000 blocks.py:343(shape)
       11    0.000    0.000    0.000    0.000 blocks.py:347(dtype)
        2    0.000    0.000    0.021    0.010 blocks.py:372(apply)
        2    0.000    0.000    0.000    0.000 blocks.py:403(_split_op_result)
        2    0.000    0.000    0.000    0.000 blocks.py:697(convert)
        6    0.000    0.000    0.000    0.000 blocks.py:752(copy)
        7    0.000    0.000    0.000    0.000 cast.py:1257(maybe_castable)
        5    0.000    0.000    0.000    0.000 cast.py:1273(maybe_infer_to_datetimelike)
        8    0.000    0.000    0.000    0.000 cast.py:1379(maybe_cast_to_datetime)
        2    0.000    0.000    0.000    0.000 cast.py:161(maybe_downcast_to_dtype)
        4    0.000    0.000    0.000    0.000 cast.py:1617(construct_1d_object_array_from_listlike)
        5    0.000    0.000    0.000    0.000 cast.py:1642(construct_1d_ndarray_preserving_na)
        4    0.000    0.000    0.001    0.000 cast.py:226(maybe_downcast_numeric)
        4    0.000    0.000    0.000    0.000 cast.py:342(maybe_cast_result_dtype)
        8    0.000    0.000    0.000    0.000 cast.py:542(maybe_promote)
        8    0.000    0.000    0.000    0.000 cast.py:698(_ensure_dtype_type)
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
      103    0.001    0.000    0.012    0.000 codecs.py:319(decode)
      103    0.000    0.000    0.000    0.000 codecs.py:331(getstate)
        1    0.000    0.000    0.000    0.000 common.py:1032(is_datetime_or_timedelta_dtype)
        1    0.000    0.000    0.000    0.000 common.py:108(is_url)
        1    0.000    0.000    0.000    0.000 common.py:116(ensure_int_or_float)
       10    0.000    0.000    0.000    0.000 common.py:1187(needs_i8_conversion)
        2    0.000    0.000    0.000    0.000 common.py:1234(is_numeric_dtype)
        3    0.000    0.000    0.000    0.000 common.py:126(_expand_user)
        1    0.000    0.000    0.000    0.000 common.py:1276(is_string_like_dtype)
        6    0.000    0.000    0.000    0.000 common.py:129(cast_scalar_indexer)
        1    0.000    0.000    0.000    0.000 common.py:1304(<lambda>)
       47    0.000    0.000    0.000    0.000 common.py:1307(is_float_dtype)
       38    0.000    0.000    0.000    0.000 common.py:1341(is_bool_dtype)
        1    0.000    0.000    0.000    0.000 common.py:145(validate_header_arg)
      200    0.000    0.000    0.001    0.000 common.py:1470(is_extension_array_dtype)
        1    0.000    0.000    0.000    0.000 common.py:1519(is_complex_dtype)
        2    0.000    0.000    0.000    0.000 common.py:154(stringify_path)
       20    0.000    0.000    0.000    0.000 common.py:1551(_is_dtype)
       81    0.000    0.000    0.000    0.000 common.py:1575(get_dtype)
      207    0.000    0.000    0.000    0.000 common.py:1610(_is_dtype_type)
        9    0.000    0.000    0.000    0.000 common.py:1743(validate_all_hashable)
       18    0.000    0.000    0.000    0.000 common.py:1762(<genexpr>)
       34    0.000    0.000    0.000    0.000 common.py:1769(pandas_dtype)
      116    0.000    0.000    0.000    0.000 common.py:185(classes)
      116    0.000    0.000    0.000    0.000 common.py:187(<lambda>)
       91    0.000    0.000    0.000    0.000 common.py:190(classes_and_not_datetimelike)
        1    0.000    0.000    0.000    0.000 common.py:191(count_not_none)
        5    0.000    0.000    0.000    0.000 common.py:195(<genexpr>)
       91    0.000    0.000    0.000    0.000 common.py:195(<lambda>)
       10    0.000    0.000    0.000    0.000 common.py:198(asarray_tuplesafe)
        1    0.000    0.000    0.000    0.000 common.py:198(is_fsspec_url)
       54    0.000    0.000    0.000    0.000 common.py:201(is_object_dtype)
        1    0.000    0.000    0.000    0.000 common.py:210(_get_filepath_or_buffer)
       21    0.000    0.000    0.000    0.000 common.py:231(is_sparse)
        2    0.000    0.000    0.000    0.000 common.py:254(maybe_iterable_to_list)
       14    0.000    0.000    0.000    0.000 common.py:355(is_datetime64_dtype)
       32    0.000    0.000    0.000    0.000 common.py:388(is_datetime64tz_dtype)
        1    0.000    0.000    0.000    0.000 common.py:403(get_compression_method)
       32    0.000    0.000    0.000    0.000 common.py:429(is_timedelta64_dtype)
        1    0.000    0.000    0.000    0.000 common.py:438(infer_compression)
       45    0.000    0.000    0.000    0.000 common.py:463(is_period_dtype)
        1    0.000    0.000    0.000    0.000 common.py:491(get_handle)
       40    0.000    0.000    0.000    0.000 common.py:499(is_interval_dtype)
      116    0.001    0.000    0.002    0.000 common.py:537(is_categorical_dtype)
       19    0.000    0.000    0.000    0.000 common.py:573(is_string_dtype)
       12    0.000    0.000    0.000    0.000 common.py:602(condition)
        2    0.000    0.000    0.000    0.000 common.py:605(is_excluded_dtype)
        8    0.000    0.000    0.000    0.000 common.py:610(<genexpr>)
       14    0.000    0.000    0.000    0.000 common.py:615(is_dtype_equal)
       73    0.000    0.000    0.000    0.000 common.py:703(is_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:72(ensure_float)
        8    0.000    0.000    0.000    0.000 common.py:757(is_signed_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:793(_maybe_memory_map)
        1    0.000    0.000    0.000    0.000 common.py:81(close)
        8    0.000    0.000    0.000    0.000 common.py:813(is_unsigned_integer_dtype)
        2    0.000    0.000    0.000    0.000 common.py:846(_is_binary_mode)
       24    0.000    0.000    0.000    0.000 common.py:912(is_datetime64_any_dtype)
        2    0.000    0.000    0.000    0.000 common.py:954(is_datetime64_ns_dtype)
        1    0.000    0.000    0.025    0.025 construction.py:241(init_dict)
        1    0.000    0.000    0.010    0.010 construction.py:333(_homogenize)
       18    0.000    0.000    0.000    0.000 construction.py:354(extract_array)
        9    0.000    0.000    0.010    0.001 construction.py:423(sanitize_array)
        9    0.000    0.000    0.000    0.000 construction.py:554(_try_cast)
        7    0.000    0.000    0.000    0.000 construction.py:612(is_empty_data)
        1    0.000    0.000    0.024    0.024 construction.py:62(arrays_to_mgr)
        2    0.000    0.000    0.001    0.000 construction.py:632(create_series_with_explicit_dtype)
       10    0.000    0.000    0.000    0.000 datetimelike.py:107(_simple_new)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1693(validate_periods)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1719(validate_endpoints)
        5    0.000    0.000    0.000    0.000 datetimelike.py:1752(validate_inferred_freq)
        5    0.000    0.000    0.000    0.000 datetimelike.py:1787(maybe_infer_freq)
        4    0.000    0.000    0.015    0.004 datetimelike.py:201(take)
        8    0.000    0.000    0.000    0.000 datetimelike.py:205(_ndarray)
        5    0.000    0.000    0.000    0.000 datetimelike.py:209(_from_backing_data)
        1    0.000    0.000    0.001    0.001 datetimelike.py:234(min)
        9    0.000    0.000    0.000    0.000 datetimelike.py:235(asi8)
        2    0.000    0.000    0.000    0.000 datetimelike.py:268(__array__)
        2    0.000    0.000    0.000    0.000 datetimelike.py:274(__getitem__)
        1    0.000    0.000    0.000    0.000 datetimelike.py:288(_get_getitem_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:291(max)
        1    0.000    0.000    0.000    0.000 datetimelike.py:337(astype)
        1    0.000    0.000    0.001    0.001 datetimelike.py:763(isna)
        1    0.001    0.001    0.001    0.001 datetimelike.py:766(_isnan)
        1    0.000    0.000    0.001    0.001 datetimelike.py:773(_hasnans)
       10    0.000    0.000    0.000    0.000 datetimelike.py:810(freq)
        1    0.002    0.002    0.041    0.041 datetimelike.py:834(inferred_freq)
        1    0.000    0.000    0.001    0.001 datetimes.py:143(_maybe_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:183(_box_as_indexlike)
        5    0.000    0.000    0.000    0.000 datetimes.py:1891(sequence_to_dt64ns)
        1    0.000    0.000    0.281    0.281 datetimes.py:2032(objects_to_datetime64ns)
        6    0.000    0.000    0.000    0.000 datetimes.py:2116(maybe_convert_dtype)
        5    0.000    0.000    0.000    0.000 datetimes.py:2209(_validate_dt64_dtype)
       10    0.000    0.000    0.000    0.000 datetimes.py:2251(validate_tz_from_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:2298(_infer_tz_from_endpoints)
        1    0.000    0.000    0.000    0.000 datetimes.py:2341(_maybe_normalize_endpoints)
        1    0.000    0.000    0.281    0.281 datetimes.py:267(_convert_listlike_datetimes)
        5    0.000    0.000    0.001    0.000 datetimes.py:282(__new__)
       12    0.000    0.000    0.000    0.000 datetimes.py:290(_simple_new)
        5    0.000    0.000    0.000    0.000 datetimes.py:309(_from_sequence_not_strict)
        1    0.000    0.000    0.000    0.000 datetimes.py:354(_generate_range)
        3    0.000    0.000    0.000    0.000 datetimes.py:484(_box_func)
       49    0.000    0.000    0.000    0.000 datetimes.py:487(dtype)
        7    0.000    0.000    0.000    0.000 datetimes.py:509(tz)
        2    0.000    0.000    0.000    0.000 datetimes.py:551(__array__)
        1    0.000    0.000    0.000    0.000 datetimes.py:583(astype)
        1    0.000    0.000    0.282    0.282 datetimes.py:609(to_datetime)
        7    0.000    0.000    0.000    0.000 datetimes.py:61(tz_to_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:87(should_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:919(date_range)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1078(construct_from_string)
       31    0.000    0.000    0.000    0.000 dtypes.py:1132(is_dtype)
        2    0.000    0.000    0.000    0.000 dtypes.py:277(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:711(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:870(construct_from_string)
       37    0.000    0.000    0.000    0.000 dtypes.py:923(is_dtype)
        4    0.000    0.000    0.000    0.000 extension.py:216(_shallow_copy)
        2    0.000    0.000    0.000    0.000 extension.py:237(__getitem__)
        1    0.000    0.000    0.000    0.000 extension.py:310(astype)
        1    0.000    0.000    0.001    0.001 extension.py:322(_isnan)
        3    0.000    0.000    0.000    0.000 extension.py:345(_get_engine_target)
        1    0.000    0.000    0.041    0.041 extension.py:49(cached)
       19    0.000    0.000    0.000    0.000 extension.py:58(fget)
       12    0.000    0.000    0.000    0.000 flags.py:47(__init__)
        7    0.000    0.000    0.000    0.000 flags.py:51(allows_duplicate_labels)
        7    0.000    0.000    0.000    0.000 flags.py:83(allows_duplicate_labels)
        5    0.000    0.000    0.000    0.000 frame.py:482(_constructor)
        6    0.000    0.000    0.025    0.004 frame.py:502(__init__)
        1    0.000    0.000    0.000    0.000 frame.py:6603(groupby)
        1    0.000    0.000    0.039    0.039 frequencies.py:120(infer_freq)
        1    0.000    0.000    0.001    0.001 frequencies.py:191(__init__)
        1    0.000    0.000    0.038    0.038 frequencies.py:230(get_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:489(is_superperiod)
        2    0.000    0.000    0.000    0.000 frequencies.py:547(_maybe_coerce_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:572(_is_annual)
        1    0.000    0.000    0.000    0.000 frequencies.py:577(_is_quarterly)
        1    0.000    0.000    0.000    0.000 frequencies.py:582(_is_monthly)
        1    0.000    0.000    0.000    0.000 frequencies.py:587(_is_weekly)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2350(_all_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2355(all)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3102(_ndim_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3106(ndim)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:433(_repeat_dispatcher)
        1    0.000    0.000    0.003    0.003 fromnumeric.py:437(repeat)
        1    0.000    0.000    0.003    0.003 fromnumeric.py:52(_wrapfunc)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:840(_sort_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:844(sort)
        1    0.000    0.000    0.000    0.000 function.py:375(validate_resampler_func)
        2    0.000    0.000    0.000    0.000 function.py:390(validate_minmax_axis)
        9    0.000    0.000    0.000    0.000 function.py:45(__call__)
        1    0.000    0.000    0.000    0.000 function_base.py:1149(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 function_base.py:1153(diff)
        1    0.000    0.000    0.022    0.022 generic.py:1012(_cython_agg_general)
        1    0.000    0.000    0.021    0.021 generic.py:1020(_cython_agg_blocks)
        2    0.000    0.000    0.000    0.000 generic.py:1029(cast_agg_result)
        1    0.000    0.000    0.000    0.000 generic.py:10565(_logical_func)
        1    0.000    0.000    0.000    0.000 generic.py:10593(any)
        1    0.000    0.000    0.000    0.000 generic.py:10858(any)
        2    0.001    0.001    0.021    0.010 generic.py:1094(blk_func)
        1    0.000    0.000    0.000    0.000 generic.py:1603(_get_data_to_aggregate)
        1    0.000    0.000    0.001    0.001 generic.py:1688(_wrap_agged_blocks)
       12    0.000    0.000    0.000    0.000 generic.py:188(__init__)
        7    0.000    0.000    0.000    0.000 generic.py:227(attrs)
       14    0.000    0.000    0.000    0.000 generic.py:248(flags)
      845    0.000    0.000    0.000    0.000 generic.py:30(_check)
        4    0.000    0.000    0.000    0.000 generic.py:340(_validate_dtype)
        2    0.000    0.000    0.054    0.027 generic.py:3492(take)
        1    0.000    0.000    0.000    0.000 generic.py:424(_construct_axes_from_arguments)
        1    0.000    0.000    0.000    0.000 generic.py:453(<dictcomp>)
       13    0.000    0.000    0.000    0.000 generic.py:456(_get_axis_number)
        1    0.000    0.000    0.000    0.000 generic.py:4564(reindex)
        5    0.000    0.000    0.000    0.000 generic.py:470(_get_axis)
        3    0.000    0.000    0.000    0.000 generic.py:476(_get_block_manager_axis)
        2    0.000    0.000    0.000    0.000 generic.py:4797(<genexpr>)
        1    0.000    0.000    0.000    0.000 generic.py:4815(_reindex_axes)
        1    0.000    0.000    0.000    0.000 generic.py:4854(_reindex_with_indexers)
        7    0.000    0.000    0.000    0.000 generic.py:5411(__finalize__)
        6    0.000    0.000    0.000    0.000 generic.py:5449(__getattr__)
        9    0.000    0.000    0.000    0.000 generic.py:5467(__setattr__)
        4    0.000    0.000    0.000    0.000 generic.py:5522(_protect_consolidate)
        3    0.000    0.000    0.000    0.000 generic.py:5534(_consolidate_inplace)
        3    0.000    0.000    0.000    0.000 generic.py:5538(f)
        1    0.000    0.000    0.000    0.000 generic.py:5543(_consolidate)
        1    0.000    0.000    0.000    0.000 generic.py:5553(<lambda>)
        1    0.000    0.000    0.000    0.000 generic.py:6013(_convert)
        1    0.000    0.000    0.000    0.000 generic.py:7416(isna)
        1    0.000    0.000    0.072    0.072 generic.py:7983(resample)
        1    0.000    0.000    0.022    0.022 generic.py:931(aggregate)
        1    0.000    0.000    0.022    0.022 groupby.py:1445(mean)
        1    0.000    0.000    0.000    0.000 groupby.py:2840(_reindex_output)
        1    0.000    0.000    0.000    0.000 groupby.py:518(__init__)
        1    0.000    0.000    0.000    0.000 groupby.py:674(_selected_obj)
        1    0.000    0.000    0.000    0.000 groupby.py:746(__getattr__)
        1    0.000    0.000    0.000    0.000 grouper.py:233(__new__)
        1    0.000    0.000    0.000    0.000 grouper.py:276(__init__)
        3    0.000    0.000    0.000    0.000 grouper.py:293(ax)
        2    0.005    0.003    0.071    0.036 grouper.py:325(_set_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:439(__init__)
        1    0.000    0.000    0.000    0.000 grouper.py:635(get_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:861(_convert_grouper)
        1    0.000    0.000    0.000    0.000 index_tricks.py:317(__getitem__)
        2    0.003    0.002    0.003    0.002 indexers.py:225(maybe_convert_indices)
        1    0.000    0.000    0.000    0.000 indexers.py:313(deprecate_ndim_indexing)
        2    0.000    0.000    0.000    0.000 indexers.py:363(check_array_indexer)
       10    0.000    0.000    0.000    0.000 inference.py:185(is_array_like)
        6    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       20    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       35    0.000    0.000    0.000    0.000 inference.py:322(is_hashable)
        2    0.000    0.000    0.000    0.000 inference.py:96(is_file_like)
        7    0.000    0.000    0.000    0.000 managers.py:126(__init__)
        3    0.000    0.000    0.041    0.014 managers.py:1260(reindex_indexer)
        2    0.000    0.000    0.041    0.020 managers.py:1311(<listcomp>)
        7    0.000    0.000    0.000    0.000 managers.py:132(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1327(_slice_take_blocks_ax0)
        2    0.002    0.001    0.054    0.027 managers.py:1454(take)
        5    0.000    0.000    0.000    0.000 managers.py:150(from_blocks)
        4    0.000    0.000    0.000    0.000 managers.py:1545(__init__)
        1    0.000    0.000    0.000    0.000 managers.py:1566(from_blocks)
        3    0.000    0.000    0.000    0.000 managers.py:1577(from_array)
        6    0.000    0.000    0.000    0.000 managers.py:1588(_block)
        6    0.000    0.000    0.000    0.000 managers.py:1626(internal_values)
        1    0.000    0.000    0.000    0.000 managers.py:1634(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:1640(_consolidate_inplace)
        1    0.000    0.000    0.014    0.014 managers.py:1690(create_block_manager_from_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1695(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:1699(<listcomp>)
        1    0.000    0.000    0.014    0.014 managers.py:1733(_form_blocks)
        1    0.000    0.000    0.007    0.007 managers.py:1829(_simple_blockify)
        2    0.000    0.000    0.007    0.003 managers.py:1844(_multi_blockify)
        4    0.000    0.000    0.000    0.000 managers.py:1847(<lambda>)
        3    0.009    0.003    0.013    0.004 managers.py:1860(_stack_arrays)
        6    0.000    0.000    0.000    0.000 managers.py:1863(_asarray_compat)
        3    0.000    0.000    0.000    0.000 managers.py:1869(_shape_compat)
        1    0.000    0.000    0.000    0.000 managers.py:1958(_preprocess_slice_or_indexer)
        7    0.000    0.000    0.000    0.000 managers.py:206(shape)
       20    0.000    0.000    0.000    0.000 managers.py:208(<genexpr>)
       19    0.000    0.000    0.000    0.000 managers.py:210(ndim)
        6    0.000    0.000    0.000    0.000 managers.py:253(items)
        1    0.000    0.000    0.000    0.000 managers.py:303(__len__)
        2    0.000    0.000    0.000    0.000 managers.py:318(_verify_integrity)
        7    0.000    0.000    0.000    0.000 managers.py:320(<genexpr>)
        2    0.000    0.000    0.021    0.011 managers.py:376(apply)
        2    0.000    0.000    0.000    0.000 managers.py:405(<dictcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:633(convert)
        8    0.000    0.000    0.000    0.000 managers.py:681(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:689(_consolidate_check)
        1    0.000    0.000    0.000    0.000 managers.py:690(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:743(get_numeric_data)
        1    0.000    0.000    0.000    0.000 managers.py:750(<listcomp>)
        2    0.000    0.000    0.001    0.000 managers.py:752(_combine)
        2    0.000    0.000    0.000    0.000 managers.py:760(<listcomp>)
        4    0.000    0.000    0.000    0.000 managers.py:975(consolidate)
        5    0.000    0.000    0.000    0.000 managers.py:991(_consolidate_inplace)
       12    0.000    0.000    0.000    0.000 missing.py:133(_isna)
        5    0.000    0.000    0.000    0.000 missing.py:202(_isna_ndarraylike)
        1    0.000    0.000    0.000    0.000 missing.py:244(_isna_string_dtype)
        2    0.000    0.000    0.000    0.000 missing.py:264(notna)
        2    0.000    0.000    0.000    0.000 missing.py:350(isna_compat)
        3    0.000    0.000    0.000    0.000 missing.py:367(array_equivalent)
        1    0.000    0.000    0.000    0.000 missing.py:465(_array_equivalent_object)
       12    0.000    0.000    0.000    0.000 missing.py:50(isna)
        2    0.000    0.000    0.000    0.000 missing.py:528(maybe_fill)
        2    0.000    0.000    0.000    0.000 missing.py:64(clean_fill_method)
        2    0.000    0.000    0.000    0.000 missing.py:721(clean_reindex_fill_method)
        2    0.000    0.000    0.000    0.000 multiarray.py:1054(copyto)
       10    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        2    0.000    0.000    0.000    0.000 multiarray.py:593(min_scalar_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:644(result_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:75(empty_like)
        1    0.000    0.000    0.000    0.000 nanops.py:174(_get_fill_value)
        1    0.000    0.000    0.000    0.000 nanops.py:199(_maybe_get_mask)
        1    0.000    0.000    0.000    0.000 nanops.py:243(_get_values)
        1    0.000    0.000    0.000    0.000 nanops.py:330(_na_ok_dtype)
        1    0.000    0.000    0.000    0.000 nanops.py:442(nanany)
        3    0.000    0.000    0.000    0.000 ntpath.py:289(expanduser)
        1    0.000    0.000    0.000    0.000 numba_.py:15(maybe_use_numba)
        2    0.000    0.000    0.000    0.000 numeric.py:2260(_isclose_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:2264(isclose)
        2    0.000    0.000    0.000    0.000 numeric.py:2344(within_tol)
        2    0.000    0.000    0.000    0.000 numeric.py:71(_zeros_like_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:75(zeros_like)
       30    0.000    0.000    0.000    0.000 numerictypes.py:285(issubclass_)
       15    0.000    0.000    0.000    0.000 numerictypes.py:359(issubdtype)
        2    0.000    0.000    0.000    0.000 numerictypes.py:575(_can_coerce_all)
        1    0.000    0.000    0.000    0.000 numerictypes.py:599(find_common_type)
        1    0.000    0.000    0.000    0.000 numerictypes.py:651(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:652(<listcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:326(ngroups)
        3    0.000    0.000    0.000    0.000 ops.py:397(_get_cython_function)
        2    0.000    0.000    0.005    0.003 ops.py:434(_get_cython_func_and_vals)
        2    0.000    0.000    0.000    0.000 ops.py:469(_disallow_invalid_ops)
        2    0.002    0.001    0.019    0.010 ops.py:550(_cython_operation)
        2    0.006    0.003    0.006    0.003 ops.py:664(_aggregate)
        1    0.000    0.000    0.000    0.000 ops.py:796(__init__)
        1    0.000    0.000    0.005    0.005 ops.py:876(group_info)
        1    0.000    0.000    0.000    0.000 ops.py:899(result_index)
        1    0.000    0.000    0.000    0.000 ops.py:906(levels)
        1    0.000    0.000    0.000    0.000 ops.py:910(names)
        1    0.000    0.000    0.000    0.000 ops.py:914(groupings)
        1    0.000    0.000    0.000    0.000 ops.py:916(<listcomp>)
        2    0.000    0.000    0.000    0.000 parse.py:100(_noop)
        2    0.000    0.000    0.000    0.000 parse.py:111(_coerce_args)
        1    0.000    0.000    0.000    0.000 parse.py:369(urlparse)
        1    0.000    0.000    0.000    0.000 parse.py:416(_checknetloc)
        1    0.000    0.000    0.000    0.000 parse.py:434(urlsplit)
        1    0.000    0.000    0.074    0.074 parsers.py:1039(_make_engine)
        1    0.000    0.000    1.395    1.395 parsers.py:1055(read)
        1    0.000    0.000    0.000    0.000 parsers.py:1086(__enter__)
        1    0.000    0.000    0.001    0.001 parsers.py:1089(__exit__)
        4    0.000    0.000    0.000    0.000 parsers.py:1093(_is_index_col)
        3    0.000    0.000    0.000    0.000 parsers.py:1097(_is_potential_multi_index)
        6    0.000    0.000    0.000    0.000 parsers.py:1121(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1199(_validate_usecols_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1249(_validate_parse_dates_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1272(__init__)
        1    0.000    0.000    0.000    0.000 parsers.py:1358(_open_handles)
        1    0.000    0.000    0.000    0.000 parsers.py:1371(_validate_parse_dates_presence)
        2    0.000    0.000    0.000    0.000 parsers.py:1398(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1407(<setcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:1419(close)
        2    0.000    0.000    0.000    0.000 parsers.py:1423(_has_complex_date_col)
        1    0.000    0.000    0.000    0.000 parsers.py:1431(_should_parse_dates)
        1    0.000    0.000    0.000    0.000 parsers.py:1509(_maybe_dedup_names)
        2    0.000    0.000    0.000    0.000 parsers.py:1539(_maybe_make_multi_index_columns)
        1    0.000    0.000    0.299    0.299 parsers.py:1545(_make_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1575(_get_simple_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1576(ix)
        1    0.006    0.006    0.299    0.299 parsers.py:1624(_agg_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1729(_infer_types)
        1    0.000    0.000    0.000    0.000 parsers.py:1835(_do_date_conversions)
        1    0.073    0.073    0.074    0.074 parsers.py:1853(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:1987(close)
        1    0.000    0.000    0.000    0.000 parsers.py:1996(_set_noconvert_columns)
        1    0.000    0.000    0.000    0.000 parsers.py:2021(_set)
        1    0.000    0.000    1.370    1.370 parsers.py:2059(read)
        1    0.000    0.000    0.000    0.000 parsers.py:2134(<listcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:2136(<dictcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:3299(_make_date_converter)
        1    0.000    0.000    0.292    0.292 parsers.py:3302(converter)
        1    0.000    0.000    0.000    0.000 parsers.py:3344(_process_date_conversion)
        1    0.000    0.000    0.000    0.000 parsers.py:3353(_isindex)
        1    0.000    0.000    0.000    0.000 parsers.py:3432(_clean_na_values)
        1    0.000    0.000    0.000    0.000 parsers.py:3476(_clean_index_names)
        1    0.000    0.000    0.000    0.000 parsers.py:3786(_refine_defaults_read)
        1    0.000    0.000    0.000    0.000 parsers.py:3875(_extract_dialect)
        2    0.000    0.000    0.000    0.000 parsers.py:394(validate_integer)
        1    0.000    0.000    0.000    0.000 parsers.py:3971(_validate_skipfooter)
        1    0.000    0.000    0.000    0.000 parsers.py:423(_validate_names)
        1    0.015    0.015    1.485    1.485 parsers.py:447(_read)
        1    0.000    0.000    1.485    1.485 parsers.py:533(read_csv)
        1    0.000    0.000    0.074    0.074 parsers.py:780(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:821(close)
        1    0.000    0.000    0.000    0.000 parsers.py:824(_get_options_with_defaults)
        1    0.000    0.000    0.000    0.000 parsers.py:865(_check_file_or_buffer)
        1    0.000    0.000    0.000    0.000 parsers.py:876(_clean_options)
        2    0.000    0.000    0.000    0.000 re.py:223(split)
        2    0.000    0.000    0.000    0.000 re.py:289(_compile)
        1    0.000    0.000    0.003    0.003 resample.py:1037(_get_binner_for_time)
        1    0.000    0.000    0.066    0.066 resample.py:1044(_downsample)
        1    0.000    0.000    0.000    0.000 resample.py:1144(_wrap_result)
        2    0.000    0.000    0.000    0.000 resample.py:116(__getattr__)
        1    0.000    0.000    0.072    0.072 resample.py:1306(get_resampler)
        1    0.000    0.000    0.000    0.000 resample.py:1355(__init__)
        1    0.000    0.000    0.000    0.000 resample.py:142(obj)
        1    0.000    0.000    0.072    0.072 resample.py:1447(_get_resampler)
        2    0.000    0.000    0.000    0.000 resample.py:146(ax)
        1    0.000    0.000    0.003    0.003 resample.py:1488(_get_time_bins)
        1    0.000    0.000    0.000    0.000 resample.py:1551(_adjust_bin_edges)
        1    0.000    0.000    0.000    0.000 resample.py:170(_convert_obj)
        1    0.000    0.000    0.000    0.000 resample.py:1710(_get_timestamp_range_edges)
        1    0.000    0.000    0.000    0.000 resample.py:1834(_adjust_dates_anchored)
        1    0.000    0.000    0.003    0.003 resample.py:188(_set_binner)
        1    0.000    0.000    0.003    0.003 resample.py:197(_get_binner)
        1    0.000    0.000    0.000    0.000 resample.py:404(_apply_loffset)
        1    0.000    0.000    0.000    0.000 resample.py:441(_wrap_result)
        1    0.000    0.000    0.039    0.039 resample.py:86(__init__)
        1    0.000    0.000    0.066    0.066 resample.py:966(g)
      6/3    0.000    0.000    0.002    0.001 series.py:238(__init__)
        2    0.000    0.000    0.001    0.001 series.py:372(_init_dict)
        1    0.000    0.000    0.000    0.000 series.py:4149(_reduce)
        1    0.000    0.000    0.000    0.000 series.py:4195(_needs_reindex_multi)
        2    0.000    0.000    0.000    0.000 series.py:422(_constructor)
        1    0.000    0.000    0.000    0.000 series.py:4337(reindex)
        5    0.000    0.000    0.000    0.000 series.py:439(_set_axis)
        1    0.000    0.000    0.000    0.000 series.py:4778(isna)
       10    0.000    0.000    0.000    0.000 series.py:488(name)
        9    0.000    0.000    0.000    0.000 series.py:538(name)
        6    0.000    0.000    0.000    0.000 series.py:585(_values)
        2    0.000    0.000    0.000    0.000 typing.py:1333(cast)
       16    0.000    0.000    0.000    0.000 typing.py:2020(new_type)
        1    0.000    0.000    0.000    0.000 typing.py:702(__instancecheck__)
        1    0.000    0.000    0.000    0.000 typing.py:831(__subclasscheck__)
       31    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FF922475C60}
       50    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
      103    0.011    0.000    0.011    0.000 {built-in method _codecs.utf_8_decode}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       21    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        6    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
        1    0.000    0.000    1.636    1.636 {built-in method builtins.exec}
1367/1332    0.000    0.000    0.041    0.000 {built-in method builtins.getattr}
      134    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
2350/2348    0.001    0.000    0.001    0.000 {built-in method builtins.isinstance}
      699    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
  270/215    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.000    0.000    0.000    0.000 {built-in method io.open}
        3    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       87    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    32/22    0.020    0.001    0.023    0.001 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       17    0.012    0.001    0.012    0.001 {built-in method numpy.empty}
       24    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       12    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.checknull}
        1    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
        1    0.281    0.281    0.281    0.281 {built-in method pandas._libs.tslib.array_to_datetime}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.offsets.to_offset}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        4    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       13    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
       33    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.004    0.002    0.004    0.002 {method 'argsort' of 'numpy.ndarray' objects}
        4    0.002    0.000    0.002    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        1    0.001    0.001    0.001    0.001 {method 'close' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
       15    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       76    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
        3    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        9    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'pandas._libs.tslibs.timestamps._Timestamp' objects}
       24    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        5    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    1.037    1.037    1.071    1.071 {method 'read' of 'pandas._libs.parsers.TextReader' objects}
       19    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.003    0.003    0.003    0.003 {method 'repeat' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'set_noconvert' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
       15    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        6    0.013    0.002    0.013    0.002 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'time' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       13    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.005    0.003    0.005    0.003 {pandas._libs.algos.ensure_float64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
        8    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
        2    0.006    0.003    0.006    0.003 {pandas._libs.algos.take_2d_axis0_float64_float64}
        2    0.013    0.007    0.013    0.007 {pandas._libs.algos.take_2d_axis1_int64_int64}
        2    0.011    0.006    0.011    0.006 {pandas._libs.algos.take_2d_axis1_object_object}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.clean_index_list}
        1    0.001    0.001    0.001    0.001 {pandas._libs.lib.generate_bins_dt64}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.get_reverse_indexer}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
        8    0.009    0.001    0.009    0.001 {pandas._libs.lib.infer_dtype}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
       14    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        4    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
       37    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}
       45    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        4    0.002    0.000    0.002    0.000 {pandas._libs.lib.maybe_indices_to_slice}
        1    0.010    0.010    0.010    0.010 {pandas._libs.tslibs.parsing.concat_date_cols}
        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.timezones.infer_tzinfo}


         15060 function calls (14940 primitive calls) in 3.668 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       15    0.000    0.000    0.032    0.002 <__array_function__ internals>:2(concatenate)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(empty_like)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(min_scalar_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
        1    0.000    0.000    0.002    0.002 <__array_function__ internals>:2(repeat)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(zeros_like)
       33    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1033(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000    3.668    3.668 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:2(__init__)
        1    0.015    0.015    3.668    3.668 Task4.py:12(ds)
       10    0.000    0.000    0.000    0.000 _asarray.py:110(asanyarray)
       54    0.000    0.000    0.000    0.000 _asarray.py:23(asarray)
        7    0.000    0.000    0.000    0.000 _asarray.py:293(require)
        7    0.000    0.000    0.000    0.000 _asarray.py:382(<setcomp>)
       39    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       39    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       39    0.000    0.000    0.000    0.000 _dtype.py:321(_name_get)
       13    0.000    0.000    0.001    0.000 _methods.py:53(_any)
        6    0.000    0.000    0.000    0.000 _methods.py:59(_all)
       41    0.000    0.000    0.000    0.000 _mixins.py:103(shape)
       37    0.000    0.000    0.000    0.000 _mixins.py:107(__len__)
        4    0.000    0.000    0.000    0.000 _mixins.py:110(ndim)
        2    0.000    0.000    0.000    0.000 _mixins.py:217(__getitem__)
        4    0.000    0.000    0.012    0.003 _mixins.py:60(take)
        1    0.000    0.000    0.000    0.000 _ranges.py:13(generate_regular_range)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        3    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
        1    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
       52    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 aggregation.py:249(maybe_mangle_lambdas)
        1    0.000    0.000    0.000    0.000 aggregation.py:46(reconstruct_func)
        1    0.000    0.000    0.032    0.032 aggregation.py:549(aggregate)
        7    0.000    0.000    0.000    0.000 algorithms.py:1534(_get_take_nd_function)
     10/6    0.000    0.000    0.013    0.002 algorithms.py:1570(take)
        7    0.001    0.000    0.059    0.008 algorithms.py:1661(take_nd)
       11    0.000    0.000    0.000    0.000 base.py:1232(name)
        3    0.000    0.000    0.000    0.000 base.py:1688(is_monotonic)
        5    0.003    0.001    0.003    0.001 base.py:1696(is_monotonic_increasing)
        2    0.033    0.017    0.033    0.017 base.py:1764(is_unique)
        1    0.000    0.000    0.000    0.000 base.py:1803(is_boolean)
       24    0.000    0.000    0.000    0.000 base.py:199(construct_from_string)
        2    0.000    0.000    0.000    0.000 base.py:2127(inferred_type)
        3    0.000    0.000    0.000    0.000 base.py:2134(_is_all_dates)
        1    0.000    0.000    0.000    0.000 base.py:226(_obj_with_exclusions)
     12/6    0.000    0.000    0.001    0.000 base.py:250(__new__)
      332    0.001    0.000    0.002    0.000 base.py:254(is_dtype)
        1    0.000    0.000    0.032    0.032 base.py:303(_try_aggregate_string_function)
        1    0.000    0.000    0.000    0.000 base.py:3142(get_indexer)
        1    0.000    0.000    0.000    0.000 base.py:333(_get_cython_func)
        1    0.000    0.000    0.000    0.000 base.py:3461(_can_reindex)
        1    0.000    0.000    0.000    0.000 base.py:3478(reindex)
        2    0.000    0.000    0.000    0.000 base.py:381(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:397(ndim)
       20    0.000    0.000    0.000    0.000 base.py:4070(_values)
        2    0.000    0.000    0.000    0.000 base.py:4096(_get_engine_target)
      333    0.001    0.000    0.001    0.000 base.py:411(find)
        6    0.000    0.000    0.000    0.000 base.py:425(_simple_new)
       11    0.000    0.000    0.000    0.000 base.py:4279(__getitem__)
        1    0.000    0.000    0.000    0.000 base.py:429(size)
        3    0.000    0.000    0.000    0.000 base.py:4393(equals)
        1    0.000    0.000    0.000    0.000 base.py:4472(identical)
        2    0.000    0.000    0.004    0.002 base.py:4749(argsort)
        2    0.000    0.000    0.000    0.000 base.py:5001(_index_as_unique)
        1    0.000    0.000    0.000    0.000 base.py:5011(_maybe_promote)
        1    0.000    0.000    0.000    0.000 base.py:503(to_numpy)
        2    0.000    0.000    0.000    0.000 base.py:510(_shallow_copy)
        3    0.000    0.000    0.000    0.000 base.py:532(is_)
       16    0.000    0.000    0.000    0.000 base.py:563(_reset_identity)
        4    0.000    0.000    0.000    0.000 base.py:574(_engine)
        1    0.000    0.000    0.000    0.000 base.py:5796(ensure_index_from_sequences)
        5    0.000    0.000    0.000    0.000 base.py:581(<lambda>)
       26    0.000    0.000    0.001    0.000 base.py:5836(ensure_index)
        1    0.000    0.000    0.000    0.000 base.py:5920(ensure_has_len)
       22    0.000    0.000    0.000    0.000 base.py:5953(maybe_extract_name)
        4    0.000    0.000    0.000    0.000 base.py:5969(_maybe_cast_with_dtype)
       59    0.000    0.000    0.000    0.000 base.py:600(__len__)
        4    0.000    0.000    0.000    0.000 base.py:6023(_maybe_cast_data_without_dtype)
        2    0.000    0.000    0.000    0.000 base.py:6137(_maybe_asobject)
        1    0.000    0.000    0.000    0.000 base.py:618(empty)
        3    0.000    0.000    0.000    0.000 base.py:623(dtype)
        6    0.000    0.000    0.013    0.002 base.py:742(take)
        6    0.000    0.000    0.000    0.000 base.py:756(_maybe_disallow_fill)
        1    0.000    0.000    0.000    0.000 base.py:796(__iter__)
       21    0.000    0.000    0.000    0.000 blocks.py:127(__init__)
        7    0.000    0.000    0.059    0.008 blocks.py:1378(take_nd)
       15    0.000    0.000    0.000    0.000 blocks.py:147(_maybe_coerce_values)
       21    0.000    0.000    0.000    0.000 blocks.py:161(_check_ndim)
        6    0.000    0.000    0.000    0.000 blocks.py:233(internal_values)
        6    0.000    0.000    0.000    0.000 blocks.py:2515(_maybe_coerce_values)
        6    0.000    0.000    0.000    0.000 blocks.py:261(fill_value)
       48    0.000    0.000    0.000    0.000 blocks.py:265(mgr_locs)
       19    0.000    0.000    0.001    0.000 blocks.py:2672(get_block_type)
       25    0.000    0.000    0.000    0.000 blocks.py:269(mgr_locs)
        8    0.000    0.000    0.001    0.000 blocks.py:2721(make_block)
        4    0.000    0.000    0.000    0.000 blocks.py:2748(extend_blocks)
        2    0.000    0.000    0.000    0.000 blocks.py:276(make_block)
       13    0.000    0.000    0.000    0.000 blocks.py:288(make_block_same_class)
        5    0.000    0.000    0.000    0.000 blocks.py:343(shape)
       11    0.000    0.000    0.000    0.000 blocks.py:347(dtype)
        2    0.000    0.000    0.030    0.015 blocks.py:372(apply)
        2    0.000    0.000    0.000    0.000 blocks.py:403(_split_op_result)
        2    0.000    0.000    0.000    0.000 blocks.py:697(convert)
        6    0.000    0.000    0.000    0.000 blocks.py:752(copy)
       12    0.000    0.000    0.000    0.000 cast.py:1257(maybe_castable)
        7    0.000    0.000    0.000    0.000 cast.py:1273(maybe_infer_to_datetimelike)
       10    0.000    0.000    0.000    0.000 cast.py:1379(maybe_cast_to_datetime)
        2    0.000    0.000    0.000    0.000 cast.py:161(maybe_downcast_to_dtype)
        4    0.000    0.000    0.000    0.000 cast.py:1617(construct_1d_object_array_from_listlike)
        7    0.000    0.000    0.000    0.000 cast.py:1642(construct_1d_ndarray_preserving_na)
        4    0.000    0.000    0.000    0.000 cast.py:226(maybe_downcast_numeric)
        4    0.000    0.000    0.000    0.000 cast.py:342(maybe_cast_result_dtype)
        8    0.000    0.000    0.000    0.000 cast.py:542(maybe_promote)
        8    0.000    0.000    0.000    0.000 cast.py:698(_ensure_dtype_type)
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
      179    0.001    0.000    0.022    0.000 codecs.py:319(decode)
      179    0.000    0.000    0.000    0.000 codecs.py:331(getstate)
        1    0.000    0.000    0.000    0.000 common.py:1032(is_datetime_or_timedelta_dtype)
        1    0.000    0.000    0.000    0.000 common.py:108(is_url)
        1    0.000    0.000    0.000    0.000 common.py:116(ensure_int_or_float)
       10    0.000    0.000    0.000    0.000 common.py:1187(needs_i8_conversion)
        2    0.000    0.000    0.000    0.000 common.py:1234(is_numeric_dtype)
        3    0.000    0.000    0.000    0.000 common.py:126(_expand_user)
        1    0.000    0.000    0.000    0.000 common.py:1276(is_string_like_dtype)
       11    0.000    0.000    0.000    0.000 common.py:129(cast_scalar_indexer)
        1    0.000    0.000    0.000    0.000 common.py:1304(<lambda>)
       89    0.000    0.000    0.000    0.000 common.py:1307(is_float_dtype)
       50    0.000    0.000    0.001    0.000 common.py:1341(is_bool_dtype)
        1    0.000    0.000    0.000    0.000 common.py:145(validate_header_arg)
      329    0.001    0.000    0.001    0.000 common.py:1470(is_extension_array_dtype)
        1    0.000    0.000    0.000    0.000 common.py:1519(is_complex_dtype)
        2    0.000    0.000    0.000    0.000 common.py:154(stringify_path)
       25    0.000    0.000    0.000    0.000 common.py:1551(_is_dtype)
       93    0.000    0.000    0.000    0.000 common.py:1575(get_dtype)
      366    0.001    0.000    0.001    0.000 common.py:1610(_is_dtype_type)
        9    0.000    0.000    0.000    0.000 common.py:1743(validate_all_hashable)
       18    0.000    0.000    0.000    0.000 common.py:1762(<genexpr>)
       36    0.000    0.000    0.000    0.000 common.py:1769(pandas_dtype)
      178    0.000    0.000    0.000    0.000 common.py:185(classes)
      178    0.000    0.000    0.000    0.000 common.py:187(<lambda>)
      188    0.000    0.000    0.000    0.000 common.py:190(classes_and_not_datetimelike)
        1    0.000    0.000    0.000    0.000 common.py:191(count_not_none)
        5    0.000    0.000    0.000    0.000 common.py:195(<genexpr>)
      188    0.000    0.000    0.000    0.000 common.py:195(<lambda>)
       10    0.000    0.000    0.000    0.000 common.py:198(asarray_tuplesafe)
        1    0.000    0.000    0.000    0.000 common.py:198(is_fsspec_url)
       74    0.000    0.000    0.000    0.000 common.py:201(is_object_dtype)
        1    0.000    0.000    0.000    0.000 common.py:210(_get_filepath_or_buffer)
       26    0.000    0.000    0.000    0.000 common.py:231(is_sparse)
        2    0.000    0.000    0.000    0.000 common.py:254(maybe_iterable_to_list)
       14    0.000    0.000    0.000    0.000 common.py:355(is_datetime64_dtype)
       37    0.000    0.000    0.000    0.000 common.py:388(is_datetime64tz_dtype)
        1    0.000    0.000    0.000    0.000 common.py:403(get_compression_method)
       32    0.000    0.000    0.000    0.000 common.py:429(is_timedelta64_dtype)
        1    0.000    0.000    0.000    0.000 common.py:438(infer_compression)
       50    0.000    0.000    0.000    0.000 common.py:463(is_period_dtype)
        1    0.000    0.000    0.000    0.000 common.py:491(get_handle)
       45    0.000    0.000    0.000    0.000 common.py:499(is_interval_dtype)
      226    0.001    0.000    0.002    0.000 common.py:537(is_categorical_dtype)
       24    0.000    0.000    0.000    0.000 common.py:573(is_string_dtype)
       12    0.000    0.000    0.000    0.000 common.py:602(condition)
        2    0.000    0.000    0.000    0.000 common.py:605(is_excluded_dtype)
        8    0.000    0.000    0.000    0.000 common.py:610(<genexpr>)
       14    0.000    0.000    0.000    0.000 common.py:615(is_dtype_equal)
      170    0.000    0.000    0.001    0.000 common.py:703(is_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:72(ensure_float)
        8    0.000    0.000    0.000    0.000 common.py:757(is_signed_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:793(_maybe_memory_map)
        1    0.000    0.000    0.000    0.000 common.py:81(close)
        8    0.000    0.000    0.000    0.000 common.py:813(is_unsigned_integer_dtype)
        2    0.000    0.000    0.000    0.000 common.py:846(_is_binary_mode)
       24    0.000    0.000    0.000    0.000 common.py:912(is_datetime64_any_dtype)
        2    0.000    0.000    0.000    0.000 common.py:954(is_datetime64_ns_dtype)
        1    0.000    0.000    0.035    0.035 construction.py:241(init_dict)
        1    0.000    0.000    0.010    0.010 construction.py:333(_homogenize)
       23    0.000    0.000    0.000    0.000 construction.py:354(extract_array)
       14    0.000    0.000    0.010    0.001 construction.py:423(sanitize_array)
       14    0.000    0.000    0.000    0.000 construction.py:554(_try_cast)
        7    0.000    0.000    0.000    0.000 construction.py:612(is_empty_data)
        1    0.000    0.000    0.033    0.033 construction.py:62(arrays_to_mgr)
        2    0.000    0.000    0.001    0.000 construction.py:632(create_series_with_explicit_dtype)
       10    0.000    0.000    0.000    0.000 datetimelike.py:107(_simple_new)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1693(validate_periods)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1719(validate_endpoints)
        5    0.000    0.000    0.000    0.000 datetimelike.py:1752(validate_inferred_freq)
        5    0.000    0.000    0.000    0.000 datetimelike.py:1787(maybe_infer_freq)
        4    0.000    0.000    0.014    0.004 datetimelike.py:201(take)
        8    0.000    0.000    0.000    0.000 datetimelike.py:205(_ndarray)
        5    0.000    0.000    0.000    0.000 datetimelike.py:209(_from_backing_data)
        1    0.000    0.000    0.001    0.001 datetimelike.py:234(min)
        9    0.000    0.000    0.000    0.000 datetimelike.py:235(asi8)
        2    0.000    0.000    0.000    0.000 datetimelike.py:268(__array__)
        2    0.000    0.000    0.000    0.000 datetimelike.py:274(__getitem__)
        1    0.000    0.000    0.000    0.000 datetimelike.py:288(_get_getitem_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:291(max)
        1    0.000    0.000    0.000    0.000 datetimelike.py:337(astype)
        1    0.000    0.000    0.001    0.001 datetimelike.py:763(isna)
        1    0.001    0.001    0.001    0.001 datetimelike.py:766(_isnan)
        1    0.000    0.000    0.001    0.001 datetimelike.py:773(_hasnans)
       10    0.000    0.000    0.000    0.000 datetimelike.py:810(freq)
        1    0.002    0.002    0.037    0.037 datetimelike.py:834(inferred_freq)
        1    0.000    0.000    0.001    0.001 datetimes.py:143(_maybe_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:183(_box_as_indexlike)
        5    0.000    0.000    0.000    0.000 datetimes.py:1891(sequence_to_dt64ns)
        1    0.000    0.000    0.284    0.284 datetimes.py:2032(objects_to_datetime64ns)
        6    0.000    0.000    0.000    0.000 datetimes.py:2116(maybe_convert_dtype)
        5    0.000    0.000    0.000    0.000 datetimes.py:2209(_validate_dt64_dtype)
       10    0.000    0.000    0.000    0.000 datetimes.py:2251(validate_tz_from_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:2298(_infer_tz_from_endpoints)
        1    0.000    0.000    0.000    0.000 datetimes.py:2341(_maybe_normalize_endpoints)
        1    0.000    0.000    0.285    0.285 datetimes.py:267(_convert_listlike_datetimes)
        5    0.000    0.000    0.000    0.000 datetimes.py:282(__new__)
       12    0.000    0.000    0.000    0.000 datetimes.py:290(_simple_new)
        5    0.000    0.000    0.000    0.000 datetimes.py:309(_from_sequence_not_strict)
        1    0.000    0.000    0.000    0.000 datetimes.py:354(_generate_range)
        3    0.000    0.000    0.000    0.000 datetimes.py:484(_box_func)
       49    0.000    0.000    0.000    0.000 datetimes.py:487(dtype)
        7    0.000    0.000    0.000    0.000 datetimes.py:509(tz)
        2    0.000    0.000    0.000    0.000 datetimes.py:551(__array__)
        1    0.000    0.000    0.000    0.000 datetimes.py:583(astype)
        1    0.000    0.000    0.285    0.285 datetimes.py:609(to_datetime)
        7    0.000    0.000    0.000    0.000 datetimes.py:61(tz_to_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:87(should_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:919(date_range)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1078(construct_from_string)
       36    0.000    0.000    0.000    0.000 dtypes.py:1132(is_dtype)
        2    0.000    0.000    0.000    0.000 dtypes.py:277(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:711(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:870(construct_from_string)
       42    0.000    0.000    0.000    0.000 dtypes.py:923(is_dtype)
        4    0.000    0.000    0.000    0.000 extension.py:216(_shallow_copy)
        2    0.000    0.000    0.000    0.000 extension.py:237(__getitem__)
        1    0.000    0.000    0.000    0.000 extension.py:310(astype)
        1    0.000    0.000    0.001    0.001 extension.py:322(_isnan)
        3    0.000    0.000    0.000    0.000 extension.py:345(_get_engine_target)
        1    0.000    0.000    0.037    0.037 extension.py:49(cached)
       19    0.000    0.000    0.000    0.000 extension.py:58(fget)
       12    0.000    0.000    0.000    0.000 flags.py:47(__init__)
        7    0.000    0.000    0.000    0.000 flags.py:51(allows_duplicate_labels)
        7    0.000    0.000    0.000    0.000 flags.py:83(allows_duplicate_labels)
        5    0.000    0.000    0.000    0.000 frame.py:482(_constructor)
        6    0.000    0.000    0.035    0.006 frame.py:502(__init__)
        1    0.000    0.000    0.000    0.000 frame.py:6603(groupby)
        1    0.000    0.000    0.035    0.035 frequencies.py:120(infer_freq)
        1    0.000    0.000    0.001    0.001 frequencies.py:191(__init__)
        1    0.000    0.000    0.033    0.033 frequencies.py:230(get_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:489(is_superperiod)
        2    0.000    0.000    0.000    0.000 frequencies.py:547(_maybe_coerce_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:572(_is_annual)
        1    0.000    0.000    0.000    0.000 frequencies.py:577(_is_quarterly)
        1    0.000    0.000    0.000    0.000 frequencies.py:582(_is_monthly)
        1    0.000    0.000    0.000    0.000 frequencies.py:587(_is_weekly)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2350(_all_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2355(all)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3102(_ndim_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3106(ndim)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:433(_repeat_dispatcher)
        1    0.000    0.000    0.002    0.002 fromnumeric.py:437(repeat)
        1    0.000    0.000    0.002    0.002 fromnumeric.py:52(_wrapfunc)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:840(_sort_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:844(sort)
        1    0.000    0.000    0.000    0.000 function.py:375(validate_resampler_func)
        2    0.000    0.000    0.000    0.000 function.py:390(validate_minmax_axis)
        9    0.000    0.000    0.000    0.000 function.py:45(__call__)
        1    0.000    0.000    0.000    0.000 function_base.py:1149(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 function_base.py:1153(diff)
        1    0.000    0.000    0.031    0.031 generic.py:1012(_cython_agg_general)
        1    0.000    0.000    0.031    0.031 generic.py:1020(_cython_agg_blocks)
        2    0.000    0.000    0.000    0.000 generic.py:1029(cast_agg_result)
        1    0.000    0.000    0.000    0.000 generic.py:10565(_logical_func)
        1    0.000    0.000    0.000    0.000 generic.py:10593(any)
        1    0.000    0.000    0.000    0.000 generic.py:10858(any)
        2    0.001    0.001    0.030    0.015 generic.py:1094(blk_func)
        1    0.000    0.000    0.000    0.000 generic.py:1603(_get_data_to_aggregate)
        1    0.000    0.000    0.001    0.001 generic.py:1688(_wrap_agged_blocks)
       12    0.000    0.000    0.000    0.000 generic.py:188(__init__)
        7    0.000    0.000    0.000    0.000 generic.py:227(attrs)
       14    0.000    0.000    0.000    0.000 generic.py:248(flags)
     1270    0.001    0.000    0.001    0.000 generic.py:30(_check)
        4    0.000    0.000    0.000    0.000 generic.py:340(_validate_dtype)
        2    0.000    0.000    0.072    0.036 generic.py:3492(take)
        1    0.000    0.000    0.000    0.000 generic.py:424(_construct_axes_from_arguments)
        1    0.000    0.000    0.000    0.000 generic.py:453(<dictcomp>)
       13    0.000    0.000    0.000    0.000 generic.py:456(_get_axis_number)
        1    0.000    0.000    0.000    0.000 generic.py:4564(reindex)
        5    0.000    0.000    0.000    0.000 generic.py:470(_get_axis)
        3    0.000    0.000    0.000    0.000 generic.py:476(_get_block_manager_axis)
        2    0.000    0.000    0.000    0.000 generic.py:4797(<genexpr>)
        1    0.000    0.000    0.000    0.000 generic.py:4815(_reindex_axes)
        1    0.000    0.000    0.000    0.000 generic.py:4854(_reindex_with_indexers)
        7    0.000    0.000    0.000    0.000 generic.py:5411(__finalize__)
        6    0.000    0.000    0.000    0.000 generic.py:5449(__getattr__)
        9    0.000    0.000    0.000    0.000 generic.py:5467(__setattr__)
        4    0.000    0.000    0.000    0.000 generic.py:5522(_protect_consolidate)
        3    0.000    0.000    0.000    0.000 generic.py:5534(_consolidate_inplace)
        3    0.000    0.000    0.000    0.000 generic.py:5538(f)
        1    0.000    0.000    0.000    0.000 generic.py:5543(_consolidate)
        1    0.000    0.000    0.000    0.000 generic.py:5553(<lambda>)
        1    0.000    0.000    0.000    0.000 generic.py:6013(_convert)
        1    0.000    0.000    0.000    0.000 generic.py:7416(isna)
        1    0.000    0.000    0.091    0.091 generic.py:7983(resample)
        1    0.000    0.000    0.032    0.032 generic.py:931(aggregate)
        1    0.000    0.000    0.032    0.032 groupby.py:1445(mean)
        1    0.000    0.000    0.000    0.000 groupby.py:2840(_reindex_output)
        1    0.000    0.000    0.000    0.000 groupby.py:518(__init__)
        1    0.000    0.000    0.000    0.000 groupby.py:674(_selected_obj)
        1    0.000    0.000    0.000    0.000 groupby.py:746(__getattr__)
        1    0.000    0.000    0.000    0.000 grouper.py:233(__new__)
        1    0.000    0.000    0.000    0.000 grouper.py:276(__init__)
        3    0.000    0.000    0.000    0.000 grouper.py:293(ax)
        2    0.006    0.003    0.090    0.045 grouper.py:325(_set_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:439(__init__)
        1    0.000    0.000    0.000    0.000 grouper.py:635(get_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:861(_convert_grouper)
        1    0.000    0.000    0.000    0.000 index_tricks.py:317(__getitem__)
        2    0.003    0.002    0.003    0.002 indexers.py:225(maybe_convert_indices)
        1    0.000    0.000    0.000    0.000 indexers.py:313(deprecate_ndim_indexing)
        2    0.000    0.000    0.000    0.000 indexers.py:363(check_array_indexer)
       10    0.000    0.000    0.000    0.000 inference.py:185(is_array_like)
        6    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       20    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       35    0.000    0.000    0.000    0.000 inference.py:322(is_hashable)
        2    0.000    0.000    0.000    0.000 inference.py:96(is_file_like)
        7    0.000    0.000    0.000    0.000 managers.py:126(__init__)
        3    0.000    0.000    0.059    0.020 managers.py:1260(reindex_indexer)
        2    0.000    0.000    0.059    0.029 managers.py:1311(<listcomp>)
        7    0.000    0.000    0.000    0.000 managers.py:132(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1327(_slice_take_blocks_ax0)
        2    0.003    0.001    0.072    0.036 managers.py:1454(take)
        5    0.000    0.000    0.000    0.000 managers.py:150(from_blocks)
        4    0.000    0.000    0.000    0.000 managers.py:1545(__init__)
        1    0.000    0.000    0.000    0.000 managers.py:1566(from_blocks)
        3    0.000    0.000    0.000    0.000 managers.py:1577(from_array)
        6    0.000    0.000    0.000    0.000 managers.py:1588(_block)
        6    0.000    0.000    0.000    0.000 managers.py:1626(internal_values)
        1    0.000    0.000    0.000    0.000 managers.py:1634(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:1640(_consolidate_inplace)
        1    0.000    0.000    0.023    0.023 managers.py:1690(create_block_manager_from_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1695(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:1699(<listcomp>)
        1    0.000    0.000    0.023    0.023 managers.py:1733(_form_blocks)
        1    0.000    0.000    0.007    0.007 managers.py:1829(_simple_blockify)
        2    0.000    0.000    0.015    0.007 managers.py:1844(_multi_blockify)
        9    0.000    0.000    0.000    0.000 managers.py:1847(<lambda>)
        3    0.018    0.006    0.022    0.007 managers.py:1860(_stack_arrays)
       11    0.000    0.000    0.000    0.000 managers.py:1863(_asarray_compat)
        3    0.000    0.000    0.000    0.000 managers.py:1869(_shape_compat)
        1    0.000    0.000    0.000    0.000 managers.py:1958(_preprocess_slice_or_indexer)
        7    0.000    0.000    0.000    0.000 managers.py:206(shape)
       20    0.000    0.000    0.000    0.000 managers.py:208(<genexpr>)
       19    0.000    0.000    0.000    0.000 managers.py:210(ndim)
        6    0.000    0.000    0.000    0.000 managers.py:253(items)
        1    0.000    0.000    0.000    0.000 managers.py:303(__len__)
        2    0.000    0.000    0.000    0.000 managers.py:318(_verify_integrity)
        7    0.000    0.000    0.000    0.000 managers.py:320(<genexpr>)
        2    0.000    0.000    0.031    0.015 managers.py:376(apply)
        2    0.000    0.000    0.000    0.000 managers.py:405(<dictcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:633(convert)
        8    0.000    0.000    0.000    0.000 managers.py:681(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:689(_consolidate_check)
        1    0.000    0.000    0.000    0.000 managers.py:690(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:743(get_numeric_data)
        1    0.000    0.000    0.000    0.000 managers.py:750(<listcomp>)
        2    0.000    0.000    0.001    0.000 managers.py:752(_combine)
        2    0.000    0.000    0.000    0.000 managers.py:760(<listcomp>)
        4    0.000    0.000    0.000    0.000 managers.py:975(consolidate)
        5    0.000    0.000    0.000    0.000 managers.py:991(_consolidate_inplace)
       12    0.000    0.000    0.000    0.000 missing.py:133(_isna)
        5    0.000    0.000    0.000    0.000 missing.py:202(_isna_ndarraylike)
        1    0.000    0.000    0.000    0.000 missing.py:244(_isna_string_dtype)
        2    0.000    0.000    0.000    0.000 missing.py:264(notna)
        2    0.000    0.000    0.000    0.000 missing.py:350(isna_compat)
        3    0.000    0.000    0.000    0.000 missing.py:367(array_equivalent)
        1    0.000    0.000    0.000    0.000 missing.py:465(_array_equivalent_object)
       12    0.000    0.000    0.000    0.000 missing.py:50(isna)
        2    0.000    0.000    0.000    0.000 missing.py:528(maybe_fill)
        2    0.000    0.000    0.000    0.000 missing.py:64(clean_fill_method)
        2    0.000    0.000    0.000    0.000 missing.py:721(clean_reindex_fill_method)
        2    0.000    0.000    0.000    0.000 multiarray.py:1054(copyto)
       15    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        2    0.000    0.000    0.000    0.000 multiarray.py:593(min_scalar_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:644(result_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:75(empty_like)
        1    0.000    0.000    0.000    0.000 nanops.py:174(_get_fill_value)
        1    0.000    0.000    0.000    0.000 nanops.py:199(_maybe_get_mask)
        1    0.000    0.000    0.000    0.000 nanops.py:243(_get_values)
        1    0.000    0.000    0.000    0.000 nanops.py:330(_na_ok_dtype)
        1    0.000    0.000    0.000    0.000 nanops.py:442(nanany)
        3    0.000    0.000    0.000    0.000 ntpath.py:289(expanduser)
        1    0.000    0.000    0.000    0.000 numba_.py:15(maybe_use_numba)
        2    0.000    0.000    0.000    0.000 numeric.py:2260(_isclose_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:2264(isclose)
        2    0.000    0.000    0.000    0.000 numeric.py:2344(within_tol)
        2    0.000    0.000    0.000    0.000 numeric.py:71(_zeros_like_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:75(zeros_like)
       40    0.000    0.000    0.000    0.000 numerictypes.py:285(issubclass_)
       20    0.000    0.000    0.000    0.000 numerictypes.py:359(issubdtype)
        2    0.000    0.000    0.000    0.000 numerictypes.py:575(_can_coerce_all)
        1    0.000    0.000    0.000    0.000 numerictypes.py:599(find_common_type)
        1    0.000    0.000    0.000    0.000 numerictypes.py:651(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:652(<listcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:326(ngroups)
        3    0.000    0.000    0.000    0.000 ops.py:397(_get_cython_function)
        2    0.000    0.000    0.009    0.005 ops.py:434(_get_cython_func_and_vals)
        2    0.000    0.000    0.000    0.000 ops.py:469(_disallow_invalid_ops)
        2    0.003    0.001    0.028    0.014 ops.py:550(_cython_operation)
        2    0.012    0.006    0.012    0.006 ops.py:664(_aggregate)
        1    0.000    0.000    0.000    0.000 ops.py:796(__init__)
        1    0.000    0.000    0.004    0.004 ops.py:876(group_info)
        1    0.000    0.000    0.000    0.000 ops.py:899(result_index)
        1    0.000    0.000    0.000    0.000 ops.py:906(levels)
        1    0.000    0.000    0.000    0.000 ops.py:910(names)
        1    0.000    0.000    0.000    0.000 ops.py:914(groupings)
        1    0.000    0.000    0.000    0.000 ops.py:916(<listcomp>)
        2    0.000    0.000    0.000    0.000 parse.py:100(_noop)
        2    0.000    0.000    0.000    0.000 parse.py:111(_coerce_args)
        1    0.000    0.000    0.000    0.000 parse.py:369(urlparse)
        1    0.000    0.000    0.000    0.000 parse.py:416(_checknetloc)
        1    0.000    0.000    0.000    0.000 parse.py:434(urlsplit)
        1    0.000    0.000    0.061    0.061 parsers.py:1039(_make_engine)
        1    0.000    0.000    3.411    3.411 parsers.py:1055(read)
        1    0.000    0.000    0.000    0.000 parsers.py:1086(__enter__)
        1    0.000    0.000    0.001    0.001 parsers.py:1089(__exit__)
        4    0.000    0.000    0.000    0.000 parsers.py:1093(_is_index_col)
        3    0.000    0.000    0.000    0.000 parsers.py:1097(_is_potential_multi_index)
        6    0.000    0.000    0.000    0.000 parsers.py:1121(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1199(_validate_usecols_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1249(_validate_parse_dates_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1272(__init__)
        1    0.000    0.000    0.000    0.000 parsers.py:1358(_open_handles)
        1    0.000    0.000    0.000    0.000 parsers.py:1371(_validate_parse_dates_presence)
        2    0.000    0.000    0.000    0.000 parsers.py:1398(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1407(<setcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:1419(close)
        2    0.000    0.000    0.000    0.000 parsers.py:1423(_has_complex_date_col)
        1    0.000    0.000    0.000    0.000 parsers.py:1431(_should_parse_dates)
        1    0.000    0.000    0.000    0.000 parsers.py:1509(_maybe_dedup_names)
        2    0.000    0.000    0.000    0.000 parsers.py:1539(_maybe_make_multi_index_columns)
        1    0.000    0.000    0.301    0.301 parsers.py:1545(_make_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1575(_get_simple_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1576(ix)
        1    0.006    0.006    0.301    0.301 parsers.py:1624(_agg_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1729(_infer_types)
        1    0.000    0.000    0.000    0.000 parsers.py:1835(_do_date_conversions)
        1    0.059    0.059    0.061    0.061 parsers.py:1853(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:1987(close)
        1    0.000    0.000    0.000    0.000 parsers.py:1996(_set_noconvert_columns)
        1    0.000    0.000    0.000    0.000 parsers.py:2021(_set)
        1    0.000    0.000    3.376    3.376 parsers.py:2059(read)
        1    0.000    0.000    0.000    0.000 parsers.py:2134(<listcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:2136(<dictcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:3299(_make_date_converter)
        1    0.000    0.000    0.295    0.295 parsers.py:3302(converter)
        1    0.000    0.000    0.000    0.000 parsers.py:3344(_process_date_conversion)
        1    0.000    0.000    0.000    0.000 parsers.py:3353(_isindex)
        1    0.000    0.000    0.000    0.000 parsers.py:3432(_clean_na_values)
        1    0.000    0.000    0.000    0.000 parsers.py:3476(_clean_index_names)
        1    0.000    0.000    0.000    0.000 parsers.py:3786(_refine_defaults_read)
        1    0.000    0.000    0.000    0.000 parsers.py:3875(_extract_dialect)
        2    0.000    0.000    0.000    0.000 parsers.py:394(validate_integer)
        1    0.000    0.000    0.000    0.000 parsers.py:3971(_validate_skipfooter)
        1    0.000    0.000    0.000    0.000 parsers.py:423(_validate_names)
        1    0.019    0.019    3.491    3.491 parsers.py:447(_read)
        1    0.000    0.000    3.491    3.491 parsers.py:533(read_csv)
        1    0.000    0.000    0.061    0.061 parsers.py:780(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:821(close)
        1    0.000    0.000    0.000    0.000 parsers.py:824(_get_options_with_defaults)
        1    0.000    0.000    0.000    0.000 parsers.py:865(_check_file_or_buffer)
        1    0.000    0.000    0.000    0.000 parsers.py:876(_clean_options)
        2    0.000    0.000    0.000    0.000 re.py:223(split)
        2    0.000    0.000    0.000    0.000 re.py:289(_compile)
        1    0.000    0.000    0.003    0.003 resample.py:1037(_get_binner_for_time)
        1    0.000    0.000    0.071    0.071 resample.py:1044(_downsample)
        1    0.000    0.000    0.000    0.000 resample.py:1144(_wrap_result)
        2    0.000    0.000    0.000    0.000 resample.py:116(__getattr__)
        1    0.000    0.000    0.091    0.091 resample.py:1306(get_resampler)
        1    0.000    0.000    0.000    0.000 resample.py:1355(__init__)
        1    0.000    0.000    0.000    0.000 resample.py:142(obj)
        1    0.000    0.000    0.090    0.090 resample.py:1447(_get_resampler)
        2    0.000    0.000    0.000    0.000 resample.py:146(ax)
        1    0.000    0.000    0.003    0.003 resample.py:1488(_get_time_bins)
        1    0.000    0.000    0.000    0.000 resample.py:1551(_adjust_bin_edges)
        1    0.000    0.000    0.000    0.000 resample.py:170(_convert_obj)
        1    0.000    0.000    0.000    0.000 resample.py:1710(_get_timestamp_range_edges)
        1    0.000    0.000    0.000    0.000 resample.py:1834(_adjust_dates_anchored)
        1    0.000    0.000    0.003    0.003 resample.py:188(_set_binner)
        1    0.000    0.000    0.003    0.003 resample.py:197(_get_binner)
        1    0.000    0.000    0.000    0.000 resample.py:404(_apply_loffset)
        1    0.000    0.000    0.000    0.000 resample.py:441(_wrap_result)
        1    0.000    0.000    0.048    0.048 resample.py:86(__init__)
        1    0.000    0.000    0.071    0.071 resample.py:966(g)
      6/3    0.000    0.000    0.002    0.001 series.py:238(__init__)
        2    0.000    0.000    0.001    0.001 series.py:372(_init_dict)
        1    0.000    0.000    0.000    0.000 series.py:4149(_reduce)
        1    0.000    0.000    0.000    0.000 series.py:4195(_needs_reindex_multi)
        2    0.000    0.000    0.000    0.000 series.py:422(_constructor)
        1    0.000    0.000    0.000    0.000 series.py:4337(reindex)
        5    0.000    0.000    0.000    0.000 series.py:439(_set_axis)
        1    0.000    0.000    0.000    0.000 series.py:4778(isna)
       10    0.000    0.000    0.000    0.000 series.py:488(name)
        9    0.000    0.000    0.000    0.000 series.py:538(name)
        6    0.000    0.000    0.000    0.000 series.py:585(_values)
        2    0.000    0.000    0.000    0.000 typing.py:1333(cast)
       16    0.000    0.000    0.000    0.000 typing.py:2020(new_type)
        1    0.000    0.000    0.000    0.000 typing.py:702(__instancecheck__)
        1    0.000    0.000    0.000    0.000 typing.py:831(__subclasscheck__)
       31    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FF922475C60}
       52    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
      179    0.021    0.000    0.021    0.000 {built-in method _codecs.utf_8_decode}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       21    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        6    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
        1    0.000    0.000    3.668    3.668 {built-in method builtins.exec}
2056/2021    0.000    0.000    0.037    0.000 {built-in method builtins.getattr}
      141    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
3255/3253    0.002    0.000    0.003    0.000 {built-in method builtins.isinstance}
     1095    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
  285/225    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.000    0.000    0.000    0.000 {built-in method io.open}
        3    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       96    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    37/27    0.033    0.001    0.035    0.001 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       17    0.012    0.001    0.012    0.001 {built-in method numpy.empty}
       24    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       12    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.checknull}
        1    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
        1    0.284    0.284    0.284    0.284 {built-in method pandas._libs.tslib.array_to_datetime}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.offsets.to_offset}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        4    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       13    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
       43    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.004    0.002    0.004    0.002 {method 'argsort' of 'numpy.ndarray' objects}
        4    0.001    0.000    0.001    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        1    0.001    0.001    0.001    0.001 {method 'close' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
       20    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       76    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
        3    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        9    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'pandas._libs.tslibs.timestamps._Timestamp' objects}
       24    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        5    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    3.015    3.015    3.075    3.075 {method 'read' of 'pandas._libs.parsers.TextReader' objects}
       19    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.002    0.002    0.002    0.002 {method 'repeat' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'set_noconvert' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
       15    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        6    0.012    0.002    0.012    0.002 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'time' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       13    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.009    0.004    0.009    0.004 {pandas._libs.algos.ensure_float64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
        8    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
        2    0.017    0.008    0.017    0.008 {pandas._libs.algos.take_2d_axis1_float64_float64}
        2    0.022    0.011    0.022    0.011 {pandas._libs.algos.take_2d_axis1_int64_int64}
        2    0.010    0.005    0.010    0.005 {pandas._libs.algos.take_2d_axis1_object_object}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.clean_index_list}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.generate_bins_dt64}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.get_reverse_indexer}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
        8    0.010    0.001    0.010    0.001 {pandas._libs.lib.infer_dtype}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
       19    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        4    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
       39    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}
       50    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        4    0.002    0.000    0.002    0.000 {pandas._libs.lib.maybe_indices_to_slice}
        1    0.010    0.010    0.010    0.010 {pandas._libs.tslibs.parsing.concat_date_cols}
        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.timezones.infer_tzinfo}


>>> 